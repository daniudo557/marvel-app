{"version":3,"sources":["routes/paths.js","themes/images.js","themes/breakpoints.js","functions/utils.js","services/api.js","components/section/index.js","components/banner/index.js","components/customCarousel/index.js","redux/actions/actionsTypes.js","redux/actions/comics.js","redux/selectors/comics.js","components/button/index.js","components/carouselItem/index.js","components/searchBar/index.js","pages/home/index.js","pages/characters/index.js","pages/comics/index.js","pages/list/index.js","components/navbar/burguerMenu.js","components/navbar/index.js","routes/index.js","routes/routes.js","redux/reducers/counter.js","redux/reducers/comics.js","redux/reducers/index.js","redux/store.js","root.js","reportWebVitals.js","index.js","assets/miles-morales.png","assets/ny.jpg","assets/deadpool-sad.png","assets/rain.png","assets/deadpool-reading.png","assets/marvel-logo.png"],"names":["Paths","home","characters","comics","list","images","header","require","default","headerBackground","error","errorBackground","logo","breakpoints","xs","sm","md","lg","xl","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","getBreakpoints","isDesktop","isTablet","isMobile","getComicImage","comic","thumbnail","path","extension","getComicOnList","comicsArray","comicId","find","comicDetails","id","getNumberOnList","comicObject","numberOfComics","apiKey","process","hash","secret","api","axios","create","baseURL","API","get","Section","title","customStyles","children","desktopStyles","padding","tabletStyles","mobileStyles","style","className","Banner","backgroundImage","image","shadowFilter","text","paddingRight","paddingLeft","src","alt","CustomCarousel","additionalTransfrom","arrows","autoPlaySpeed","centerMode","containerClass","dotListClass","draggable","focusOnSelect","infinite","itemClass","keyBoardControl","minimumTouchDrag","renderButtonGroupOutside","renderDotsOutside","responsive","desktop","breakpoint","max","min","items","partialVisibilityGutter","desktop2","tablet","mobile","showDots","sliderClass","slidesToSlide","swipeable","actionsTypes","addToList","value","type","newValue","removeFromList","selectors","state","comicsReducers","Button","onClick","color","CarouselItem","item","isLoading","dispatch","useDispatch","useSelector","preventDragHandler","e","preventDefault","to","onDragStart","SearchBar","placeholder","onChange","alignSelf","fontSize","icon","faSearch","Home","comicsResponse","setComicsResponse","comicsFiltered","setComicsFilter","setLoading","getComics","then","data","results","renderComicsNotFount","renderCarousel","map","index","backgroundColor","event","textTypedInLowerCase","toLowerCase","filteredComicsArray","filter","includes","searchComics","target","loadinRandomArray","Array","fill","Math","round","random","renderLoading","length","Characters","Comics","props","params","match","creatorResponse","setCreatorResponse","isError","setError","getComicsById","pop","creators","available","getCreatorsByComicId","catch","getComicReleasedDate","unformatedDate","dates","date","Date","toLocaleDateString","fullName","pageCount","description","List","removeComicFromList","addComicToList","BurguerMenu","sidebarOpen","setSidebarOpen","renderBurguerButton","faTimes","faBars","Navbar","menuItems","paths","Routes","basename","exact","component","INITIAL_STATE","counter","reducers","combineReducers","counterReducers","action","newComicObject","push","store","createStore","Root","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7de6e579.chunk.js","sourcesContent":["const Paths = {\n  home: '/',\n  characters: '/characters',\n  comics: '/comics/:id',\n  list: '/list'\n}\n\nexport default Paths\n","const images = {\n  header: require('../assets/miles-morales.png').default,\n  headerBackground: require('../assets/ny.jpg').default,\n  error: require('../assets/deadpool-sad.png').default,\n  errorBackground: require('../assets/rain.png').default,\n  list: require('../assets/deadpool-reading.png').default,\n  logo: require('../assets/marvel-logo.png').default\n}\n\nexport default images\n","const breakpoints = {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920\n}\n\nexport default breakpoints\n","import { useState, useEffect } from 'react'\nimport { breakpoints } from '../themes'\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window\n  return { width, height }\n}\n\nexport const useWindowDimensions = () => {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions())\n\n  useEffect(() => {\n    function handleResize () {\n      setWindowDimensions(getWindowDimensions())\n    }\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  return windowDimensions\n}\n\nexport const getBreakpoints = (width) => {\n  const isDesktop = width > breakpoints.md\n  const isTablet = width > breakpoints.sm && width <= breakpoints.md\n  const isMobile = width <= breakpoints.sm\n\n  return { isDesktop, isTablet, isMobile }\n}\n\nexport const getComicImage = (comic) =>\n  comic?.thumbnail?.path + '.' + comic?.thumbnail?.extension\n\nexport const getComicOnList = (comicsArray, comicId) => (\n  comicsArray\n    .find(comic => comic.comicDetails.id === comicId)\n)\n\nexport const getNumberOnList = (comicsArray, comicId) => {\n  const comicObject = getComicOnList(comicsArray, comicId)\n  const isComicOnList = !!comicObject\n\n  if (!isComicOnList) return 0\n\n  return comicObject.numberOfComics\n}\n","import axios from 'axios'\n\nconst apiKey = `apikey=${process.env.REACT_APP_API_KEY}`\nconst hash = `hash=${process.env.REACT_APP_HASH}`\nconst secret = `ts=1&${apiKey}&${hash}`\n\nconst baseURL = 'https://gateway.marvel.com/v1/public'\n\nconst api = axios.create({ baseURL })\n\nconst API = {}\n\nAPI.getComics = () => api.get(`/comics?limit=100&${secret}`)\nAPI.getComicsById = (comicId) => api.get(`/comics/${comicId}?${secret}`)\nAPI.getStoriesByComicId = (comicId) =>\n  api.get(`/comics/${comicId}/stories?${secret}`)\nAPI.getCreatorsByComicId = (comicId) =>\n  api.get(`/comics/${comicId}/creators?${secret}`)\n\nAPI.getCharacters = () => api.get(`/characters?${secret}`)\nAPI.getCharacters2 = () => api.get(`/comics/1308/characters?${secret}`)\n\nexport default API\n","import React from 'react'\n\nimport { useWindowDimensions, getBreakpoints } from '../../functions/utils'\nimport './styles.scss'\n\nconst Section = ({ title, customStyles, children, id }) => {\n  const { width } = useWindowDimensions()\n  const { isDesktop, isTablet, isMobile } = getBreakpoints(width)\n\n  const desktopStyles = { ...customStyles, padding: 32 }\n  const tabletStyles = { ...customStyles, padding: 16 }\n  const mobileStyles = { ...customStyles, padding: 8 }\n\n  const getStyles = () => {\n    if (isDesktop) return desktopStyles\n    else if (isTablet) return tabletStyles\n    else if (isMobile) return mobileStyles\n  }\n\n  return (\n    <section\n      id={id}\n      style={getStyles()}\n      className='container'\n    >\n      <h2 className='title'>{title}</h2>\n      {children}\n    </section>\n  )\n}\n\nexport default Section\n","import React from 'react'\nimport { images } from '../../themes'\n\nimport { getBreakpoints, useWindowDimensions } from '../../functions/utils'\n\nimport './styles.scss'\n\nconst Banner = ({\n  backgroundImage = images.headerBackground,\n  image = images.header,\n  shadowFilter,\n  text\n}) => {\n  const { width } = useWindowDimensions()\n  const { isDesktop, isTablet, isMobile } = getBreakpoints(width)\n  const desktopStyles = { paddingRight: 32, paddingLeft: 32 }\n  const tabletStyles = { paddingRight: 16, paddingLeft: 16 }\n  const mobileStyles = { paddingRight: 8, paddingLeft: 8 }\n\n  const getStyles = () => {\n    if (isDesktop) return desktopStyles\n    else if (isTablet) return tabletStyles\n    else if (isMobile) return mobileStyles\n  }\n\n  const getwelcomeSectionContainerClass = () => {\n    if (isDesktop) return 'welcomeSectionContainer'\n    else if (isTablet) return 'welcomeSectionContainer-tablet'\n    else if (isMobile) return 'welcomeSectionContainer-mobile'\n  }\n\n  const getWelcomeSectionTxtClass = () => {\n    if (isDesktop) return 'welcomeSectionTxt'\n    else if (isTablet) return 'welcomeSectionTxt-tablet'\n    else if (isMobile) return 'welcomeSectionTxt-mobile'\n  }\n  return (\n    <section style={getStyles()}>\n      <div className='backgroundImgContainer'>\n        <div\n          className='backgroundImg'\n          style={{ backgroundImage: `url(${backgroundImage})` }}\n        />\n        {shadowFilter && <div className='shadowFilter' />}\n      </div>\n      <div className='welcomeSection'>\n        <div className={getwelcomeSectionContainerClass()}>\n          <img\n            src={image}\n            alt='logo'\n            className={`animatedImgSlideRight \n            ${isDesktop\n              ? 'animatedImg'\n              : isTablet\n                ? 'animatedImg-tablet'\n                : 'animatedImg-mobile'}`}\n          />\n          <div\n            className={`welcomeSectionTxtAppear ${getWelcomeSectionTxtClass()}`}\n          >\n            {text}\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Banner\n","import Carousel from 'react-multi-carousel'\nimport 'react-multi-carousel/lib/styles.css'\n\nimport { breakpoints } from '../../themes'\n\nconst CustomCarousel = ({ children }) => {\n  return ((\n    <Carousel\n      additionalTransfrom={0}\n      arrows\n      autoPlaySpeed={3000}\n      centerMode={false}\n      className=''\n      containerClass='container-with-dots'\n      dotListClass=''\n      draggable\n      focusOnSelect={false}\n      infinite\n      itemClass=''\n      keyBoardControl\n      minimumTouchDrag={80}\n      renderButtonGroupOutside={false}\n      renderDotsOutside={false}\n      responsive={{\n        desktop: {\n          breakpoint: {\n            max: 3000,\n            min: breakpoints.xl\n          },\n          items: 5,\n          partialVisibilityGutter: 0\n        },\n        desktop2: {\n          breakpoint: {\n            max: breakpoints.xl,\n            min: breakpoints.lg\n          },\n          items: 3,\n          partialVisibilityGutter: 30\n        },\n        tablet: {\n          breakpoint: {\n            max: breakpoints.lg,\n            min: breakpoints.md\n          },\n          items: 2,\n          partialVisibilityGutter: 30\n        },\n        mobile: {\n          breakpoint: {\n            max: breakpoints.md,\n            min: 0\n          },\n          items: 1,\n          partialVisibilityGutter: 30\n        }\n      }}\n      showDots={false}\n      sliderClass=''\n      slidesToSlide={1}\n      swipeable\n    >\n      {children}\n    </Carousel>\n  ))\n}\n\nexport default CustomCarousel\n","const actionsTypes = {\n  COUNTER_DECREMENT: 'COUNTER_DECREMENT',\n  COUNTER_INCREMENT: 'COUNTER_INCREMENT',\n  ADD_COMIC_TO_LIST: 'ADD_COMIC_TO_LIST',\n  REMOVE_COMIC_FROM_LIST: 'REMOVE_COMIC_FROM_LIST'\n}\n\nexport { actionsTypes }\n","import { actionsTypes } from './actionsTypes'\n\nexport const addToList = (value) => ({\n  type: actionsTypes.ADD_COMIC_TO_LIST,\n  newValue: value\n})\n\nexport const removeFromList = (value) => ({\n  type: actionsTypes.REMOVE_COMIC_FROM_LIST,\n  newValue: value\n})\n","const selectors = {\n  getComics: state => state.comicsReducers.comics\n}\n\nexport { selectors }\n","import React from 'react'\nimport './styles.scss'\n\nconst Button = ({ text, color, onClick }) => {\n  return (\n    <button onClick={onClick} className='buttonContainer'>\n      {text}\n    </button>\n  )\n}\n\nexport default Button\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { removeFromList, addToList } from '../../redux/actions/comics'\nimport { selectors } from '../../redux/selectors/comics'\n\nimport {\n  useWindowDimensions,\n  getBreakpoints,\n  getComicImage,\n  getNumberOnList\n} from '../../functions/utils'\n\nimport Button from '../button'\nimport './styles.scss'\n\nconst CarouselItem = ({ item, isLoading }) => {\n  const { width } = useWindowDimensions()\n  const { isTablet, isMobile } = getBreakpoints(width)\n\n  const dispatch = useDispatch()\n  const comics = useSelector(selectors.getComics)\n\n  const removeComicFromList = (comic) => dispatch(removeFromList(comic))\n  const addComicToList = (comic) => dispatch(addToList(comic))\n\n  const preventDragHandler = (e) => {\n    e.preventDefault()\n  }\n\n  const renderContent = () => (\n    <>\n      <Link\n        className='carouselImageContainer'\n        to={`comics/${item.id}`}\n      >\n        <h2 id='seeMore'>VER MAIS</h2>\n        <img\n          className='carouselImage'\n          onDragStart={preventDragHandler}\n          alt={item.title}\n          src={getComicImage(item)}\n        />\n        <h2 className='numberOfComicIndicator'>\n          {getNumberOnList(comics, item.id)}\n        </h2>\n      </Link>\n      <div className='itemFooter'>\n        <div className='comicTitle'>\n          {item.title}\n        </div>\n        <div className='itemFooterButtons'>\n          <Button\n            text='Remover da lista'\n            onClick={() => removeComicFromList(item)}\n          />\n          <Button\n            text='Adicionar à lista'\n            onClick={() => addComicToList(item)}\n          />\n        </div>\n      </div>\n    </>\n  )\n  return (\n    <div\n      className={`carouselItemContainer\n        ${isMobile\n          ? 'carouselItemContainer-mobile'\n          : 'carouselItemContainer-tablet'}`}\n    >\n      <div\n        id='arrow'\n        className={`carouselItem \n        ${isTablet && 'carouselItem-tablet'}\n        ${isLoading && 'loading'}`}\n      >\n        {!isLoading && renderContent()}\n      </div>\n    </div>\n  )\n}\n\nexport default CarouselItem\n","import React from 'react'\n\nimport './styles.scss'\n\nimport { getBreakpoints, useWindowDimensions } from '../../functions/utils'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\n\nconst SearchBar = ({ placeholder, onChange }) => {\n  const { width } = useWindowDimensions()\n  const { isTablet, isMobile } = getBreakpoints(width)\n\n  return (\n    <form className={`searchBar ${(isTablet || isMobile) && 'searchBar-mobile'}`}>\n      <FontAwesomeIcon\n        style={{ alignSelf: 'center', fontSize: 26 }}\n        color='#F0141E'\n        icon={faSearch}\n      />\n      <input type='text' style={{ width: '100%' }} onChange={onChange} placeholder={placeholder} />\n    </form>\n  )\n}\n\nexport default SearchBar\n","import React, { useState, useEffect } from 'react'\n\nimport { getBreakpoints, useWindowDimensions } from '../../functions/utils'\n\nimport API from '../../services/api'\nimport './styles.scss'\n\nimport Section from '../../components/section'\nimport Banner from '../../components/banner'\nimport CustomCarousel from '../../components/customCarousel'\nimport CarouselItem from '../../components/carouselItem'\nimport SearchBar from '../../components/searchBar'\n\nconst Home = () => {\n  const { width } = useWindowDimensions()\n  const { isTablet } = getBreakpoints(width)\n\n  const [comicsResponse, setComicsResponse] = useState([])\n  const [comicsFiltered, setComicsFilter] = useState([])\n  const [isLoading, setLoading] = useState(false)\n\n  useEffect(() => {\n    setLoading(true)\n    API.getComics().then(({ data }) => {\n      setComicsResponse(data.data.results)\n      setComicsFilter(data.data.results)\n      setLoading(false)\n    })\n  }, [])\n\n  const renderContent = () => (\n    comicsFiltered.length === 0\n      ? renderComicsNotFount()\n      : renderCarousel()\n  )\n  const renderComicsNotFount = () => (\n    <div className='comicsNotFoundContainer'>\n      <h2>Não foi encontrado nenhum quadrinho com esse título</h2>\n    </div>\n  )\n  const renderCarousel = () => (\n    <CustomCarousel isMobile={isTablet}>\n      {comicsFiltered.map((comic, index) => (\n        <CarouselItem\n          key={index}\n          item={comic}\n        />\n      ))}\n    </CustomCarousel>\n  )\n\n  const renderLoading = () => {\n    const loadinRandomArray =\n     Array(5).fill().map(() => Math.round(Math.random() * 5))\n    return (\n      <CustomCarousel isMobile={isTablet}>\n        {loadinRandomArray.map((item, index) => (\n          <CarouselItem\n            key={index}\n            isLoading\n          />\n        ))}\n      </CustomCarousel>\n    )\n  }\n\n  const searchComics = (text) => {\n    const textTypedInLowerCase = text.toLowerCase()\n    const filteredComicsArray = comicsResponse.filter((comic) => {\n      const titleInLowerCase = comic.title.toLowerCase()\n      return titleInLowerCase.includes(textTypedInLowerCase)\n    })\n    setComicsFilter(filteredComicsArray)\n  }\n\n  return (\n    <>\n      <Banner\n        text='Bem vindo(a) ao Marvel-App! Explore o mundo dos quadrinhos'\n      />\n      <Section\n        id='comics'\n        customStyles={{ backgroundColor: '#EEEEEE' }}\n        title='Procure o seu quadrinho preferido!'\n      >\n        <SearchBar\n          onChange={(event) => searchComics(event.target.value)}\n          placeholder='X-Men: Days of Future Past (Trade Paperback)'\n        />\n        {isLoading ? renderLoading() : renderContent()}\n      </Section>\n    </>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport Banner from '../../components/banner'\n\nconst Characters = () => {\n  return (\n    <div className=''>\n      <Banner />\n    </div>\n  )\n}\n\nexport default Characters\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { removeFromList, addToList } from '../../redux/actions/comics'\nimport { selectors } from '../../redux/selectors/comics'\n\nimport API from '../../services/api'\nimport { getComicImage, getNumberOnList } from '../../functions/utils'\n\nimport Button from '../../components/button'\nimport Banner from '../../components/banner'\nimport Section from '../../components/section'\n\nimport { images } from '../../themes'\n\nconst Comics = (props) => {\n  const { params } = props.match\n\n  const [comicsResponse, setComicsResponse] = useState([])\n  const [creatorResponse, setCreatorResponse] = useState(null)\n  const [isLoading, setLoading] = useState(false)\n  const [isError, setError] = useState(false)\n\n  const comics = useSelector(selectors.getComics)\n\n  const dispatch = useDispatch()\n\n  const removeComicFromList = (comic) => dispatch(removeFromList(comic))\n  const addComicToList = (comic) => dispatch(addToList(comic))\n\n  useEffect(() => {\n    setLoading(true)\n    API.getComicsById(params.id).then(({ data }) => {\n      setComicsResponse(data.data.results.pop())\n\n      if (comicsResponse?.creators?.available > 0) {\n        API.getCreatorsByComicId(params.id).then(({ data }) => {\n          setCreatorResponse(data.data.results.pop())\n        }).catch(() => {\n          setError(true)\n          setLoading(false)\n        })\n      }\n      setLoading(false)\n      setError(false)\n    }).catch(() => {\n      setError(true)\n      setLoading(false)\n    })\n  }, [])\n\n  const getComicReleasedDate = () => {\n    const unformatedDate = comicsResponse?.dates?.filter(item => item.type === 'focDate')[0].date\n    const date = new Date(unformatedDate)\n    return date.toLocaleDateString()\n  }\n\n  const renderComicInformation = () => (\n    <>\n      <h2>Criador: {creatorResponse\n        ? creatorResponse?.fullName\n        : 'Invalid Creator'}\n      </h2>\n      <h2>Data de publicação: {getComicReleasedDate()}</h2>\n      <h2>Número de páginas: {comicsResponse?.pageCount}</h2>\n      <h2>Descrição: {comicsResponse?.description\n        ? comicsResponse?.description\n        : 'Invalid description'}\n      </h2>\n      <h2>Na sua lista: {getNumberOnList(comics, comicsResponse?.id)}</h2>\n    </>\n  )\n\n  const renderContent = () => (\n    <>\n      <Banner\n        shadowFilter\n        image={getComicImage(comicsResponse)}\n        backgroundImage={getComicImage(comicsResponse)}\n        text={comicsResponse?.title}\n      />\n      <Section\n        customStyles={{ backgroundColor: '#EEEEEE' }}\n        title={comicsResponse?.title}\n      >\n        {renderComicInformation()}\n        <Button\n          text='Remover da lista'\n          onClick={() => removeComicFromList(comicsResponse)}\n        />\n        <Button\n          text='Adicionar à lista'\n          onClick={() => addComicToList(comicsResponse)}\n        />\n      </Section>\n    </>\n  )\n\n  const renderError = () => (\n    <Banner\n      shadowFilter\n      image={images.error}\n      backgroundImage={images.errorBackground}\n      text='Não foi possível carregar os dados do quadrinho'\n    />\n  )\n\n  if (isLoading) {\n    return <h1>Loading</h1>\n  }\n  return isError ? renderError() : renderContent()\n}\n\nexport default Comics\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { removeFromList, addToList } from '../../redux/actions/comics'\nimport { selectors } from '../../redux/selectors/comics'\n\nimport Banner from '../../components/banner'\nimport Button from '../../components/button'\nimport Section from '../../components/section'\nimport { images } from '../../themes'\n\nconst List = () => {\n  const comics = useSelector(selectors.getComics)\n\n  const dispatch = useDispatch()\n\n  const removeComicFromList = (comic) => dispatch(removeFromList(comic))\n  const addComicToList = (comic) => dispatch(addToList(comic))\n\n  const renderContent = () =>\n    (\n      <div className=''>\n        <Banner\n          image={images.list}\n          text='Consulte sua lista de quadrinhos'\n        />\n        <Section\n          customStyles={{ backgroundColor: '#F5F5F5' }}\n          title='Consulte sua lista de quadrinhos'\n        >\n          {comics.map((comic, index) => (\n            <div key={index} style={{ padding: 32 }}>\n              <h1>Título: {comic.comicDetails.title}</h1>\n              <h1>Na sua lista: {comic.numberOfComics}</h1>\n              <Button\n                text='Remover da lista'\n                onClick={() => removeComicFromList(comic.comicDetails)}\n              />\n              <Button\n                text='Adicionar à lista'\n                onClick={() => addComicToList(comic.comicDetails)}\n              />\n            </div>\n          ))}\n        </Section>\n      </div>\n    )\n\n  const renderEmptyList = () => (\n    <Banner\n      image={images.error}\n      backgroundImage={images.errorBackground}\n      text='Você ainda não possui nenhum quadrinho em sua lista\n         Adicione quadrinhos na página principal'\n    />\n  )\n\n  return comics.length > 0 ? renderContent() : renderEmptyList()\n}\n\nexport default List\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faBars } from '@fortawesome/free-solid-svg-icons'\n\nimport './styles.scss'\n\nconst BurguerMenu = ({ items }) => {\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n\n  const renderBurguerItems = () => (\n    items.map((item, index) => (\n      <Link\n        key={index}\n        to={item.path}\n        className='marvelDefaultText menuItem'\n        style={{ fontSize: 22, padding: '8px 0px 8px 0px' }}\n        onClick={() => setSidebarOpen(false)}\n      >\n        {item.text}\n      </Link>\n    ))\n  )\n\n  const renderOpenedBurguer = () => (\n    <div className='sideBarMenu'>\n      {renderBurguerButton()}\n      {renderBurguerItems()}\n    </div>\n  )\n\n  const renderBurguerButton = () => (\n    <div className={sidebarOpen\n      ? 'burgerButtonContainer-opened'\n      : 'burgerButtonContainer'}\n    >\n      <div\n        className='burgerButton'\n        onClick={() => setSidebarOpen(!sidebarOpen)}\n      >\n        {sidebarOpen\n          ? <FontAwesomeIcon\n              style={{ alignSelf: 'center', fontSize: 26 }}\n              color='#F0141E'\n              icon={faTimes}\n            />\n          : <FontAwesomeIcon\n              style={{ alignSelf: 'center', fontSize: 26 }}\n              color='#F0141E'\n              icon={faBars}\n            />}\n      </div>\n    </div>\n  )\n  return sidebarOpen ? renderOpenedBurguer() : renderBurguerButton()\n}\nexport default BurguerMenu\n","import React from 'react'\nimport { images } from '../../themes'\nimport { Link } from 'react-router-dom'\n\nimport paths from '../../routes/paths'\nimport { useWindowDimensions, getBreakpoints } from '../../functions/utils'\nimport BurguerMenu from './burguerMenu'\nimport './styles.scss'\n\nconst Navbar = () => {\n  const { width } = useWindowDimensions()\n  const { isMobile, isTablet } = getBreakpoints(width)\n\n  const menuItems = [\n    { text: 'Quadrinhos', path: paths.home },\n    { text: 'Personagens', path: paths.characters },\n    { text: 'Minha lista', path: paths.list }\n  ]\n\n  const renderMobileNavBar = () => (\n    <div className='navBar navBar-mobile'>\n      <div className='marvelLogo marvelLogo-mobile'>\n        <Link\n          className='marvelDefaultText'\n          style={{ paddingRight: 8, paddingLeft: 8 }}\n          to={paths.home}\n        >\n          M\n        </Link>\n      </div>\n      <BurguerMenu items={menuItems} />\n    </div>\n  )\n\n  const renderDesktopNavBar = () => (\n    <div className='navBar'>\n      <Link\n        style={{ height: '100%' }}\n        to={paths.home}\n      >\n        <img src={images.logo} className='marvelLogo' alt='logo' />\n      </Link>\n      <div className='menuLine'>\n        {menuItems.map((item, index) => (\n          <Link\n            key={index}\n            to={item.path}\n            className='marvelDefaultText menuItem'\n          >\n            {item.text}\n          </Link>\n        ))}\n\n      </div>\n    </div>\n  )\n\n  return isMobile || isTablet ? renderMobileNavBar() : renderDesktopNavBar()\n}\n\nexport default Navbar\n","import Paths from './paths'\nimport Routes from './routes'\n\nexport const paths = Paths\n\nexport default Routes\n","import React from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nimport paths from './paths'\nimport Home from '../pages/home'\nimport Characters from '../pages/characters'\nimport Comics from '../pages/comics'\nimport List from '../pages/list'\nimport Navbar from '../components/navbar'\n\nexport default function Routes () {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Navbar />\n      <Route path={paths.home} exact component={Home} />\n      <Route path={paths.comics} component={Comics} />\n      <Route path={paths.characters} component={Characters} />\n      <Route path={paths.list} component={List} />\n    </BrowserRouter>\n  )\n}\n","import { actionsTypes } from '../actions/actionsTypes'\n\nconst INITIAL_STATE = {\n  counter: 0\n}\n\nconst reducers = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionsTypes.COUNTER_DECREMENT:\n      return { ...state, counter: state.counter - 1 }\n    case actionsTypes.COUNTER_INCREMENT:\n      return { ...state, counter: state.counter + 1 }\n    default:\n      return state\n  }\n}\n\nexport { reducers }\n","import { actionsTypes } from '../actions/actionsTypes'\nimport { getComicOnList } from '../../functions/utils'\nconst INITIAL_STATE = {\n  comics: []\n}\n\nconst reducers = (state = INITIAL_STATE, action) => {\n  const addComicToList = () => {\n    const comicsArray = state.comics\n    const isComicOnList = !!getComicOnList(comicsArray, action.newValue.id)\n\n    // if comic is not on list, it must start\n    // with numberOfComics equals to 1\n    if (!isComicOnList) {\n      const newComicObject = {\n        numberOfComics: 1,\n        comicDetails: action.newValue\n      }\n      comicsArray.push(newComicObject)\n\n      return [...comicsArray]\n    }\n\n    return comicsArray.map(comic =>\n      comic.comicDetails.id === action.newValue.id\n        ? { ...comic, numberOfComics: comic.numberOfComics + 1 }\n        : comic\n    )\n  }\n\n  const removeComicFromList = () => {\n    const comicsArray = state.comics\n    const comicObject = getComicOnList(comicsArray, action.newValue.id)\n    const isComicOnList = !!comicObject\n\n    // if comic is not on list, it can't be removed\n    if (!isComicOnList) { return [...comicsArray] }\n\n    // if numberOfComics is equals to 1, it object\n    // has to be be removed from list\n    if (comicObject.numberOfComics === 1) {\n      return comicsArray\n        .filter((comic) => comic.comicDetails.id !== action.newValue.id)\n    }\n\n    return comicsArray.map(comic =>\n      comic.comicDetails.id === action.newValue.id\n        ? { ...comic, numberOfComics: comic.numberOfComics - 1 }\n        : comic\n    )\n  }\n\n  switch (action.type) {\n    case actionsTypes.ADD_COMIC_TO_LIST:\n      return { ...state, comics: addComicToList() }\n    case actionsTypes.REMOVE_COMIC_FROM_LIST:\n      return { ...state, comics: removeComicFromList() }\n    default:\n      return state\n  }\n}\n\nexport { reducers }\n","import { combineReducers } from 'redux'\nimport { reducers as counterReducers } from './counter'\nimport { reducers as comicsReducers } from './comics'\n\nconst reducers = combineReducers({\n  counterReducers,\n  comicsReducers\n})\n\nexport { reducers }\n","import { createStore } from 'redux'\nimport { reducers } from './reducers'\n\nconst store = createStore(reducers)\n\nexport { store }\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport Routes from './routes'\n\nimport { store } from './redux/store'\n\nconst Root = () => (\n  <Provider store={store}>\n    <Routes />\n  </Provider>\n)\n\nexport default Root\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Root from './root'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\nreportWebVitals()\n","export default __webpack_public_path__ + \"static/media/miles-morales.c51f6de4.png\";","export default __webpack_public_path__ + \"static/media/ny.d8dfa83b.jpg\";","export default __webpack_public_path__ + \"static/media/deadpool-sad.ee4d77fb.png\";","export default __webpack_public_path__ + \"static/media/rain.087b7fd6.png\";","export default __webpack_public_path__ + \"static/media/deadpool-reading.5afa8a20.png\";","export default __webpack_public_path__ + \"static/media/marvel-logo.568d8c62.png\";"],"sourceRoot":""}