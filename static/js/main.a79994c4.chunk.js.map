{"version":3,"sources":["routes/paths.js","themes/images.js","themes/breakpoints.js","functions/utils.js","services/api.js","components/section/index.js","components/banner/index.js","components/customCarousel/index.js","redux/actions/actionsTypes.js","redux/actions/comics.js","redux/selectors/comics.js","components/button/index.js","components/carouselItem/index.js","components/searchBar/index.js","pages/home/index.js","pages/characters/index.js","components/card/index.js","pages/comics/index.js","components/form/index.js","pages/list/index.js","components/navbar/burguerMenu.js","components/navbar/index.js","routes/index.js","routes/routes.js","redux/reducers/comics.js","redux/reducers/index.js","redux/store.js","root.js","reportWebVitals.js","index.js","assets/miles-morales.png","assets/ny.jpg","assets/deadpool-sad.png","assets/rain.png","assets/deadpool-reading.png","assets/marvel-logo.png"],"names":["Paths","home","characters","comics","list","images","header","require","default","headerBackground","error","errorBackground","logo","breakpoints","xs","sm","md","lg","xl","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","getBreakpoints","isDesktop","isTablet","isMobile","getComicImage","comic","thumbnail","path","extension","getComicOnList","comicsArray","comicId","find","comicDetails","id","getNumberOnList","comicObject","numberOfComics","apiKey","process","hash","secret","api","axios","create","baseURL","emailApi","API","get","data","post","Section","title","customStyles","children","desktopStyles","padding","tabletStyles","mobileStyles","style","className","Banner","backgroundImage","image","shadowFilter","text","paddingRight","paddingLeft","src","alt","CustomCarousel","additionalTransfrom","arrows","autoPlaySpeed","centerMode","containerClass","dotListClass","draggable","focusOnSelect","infinite","itemClass","keyBoardControl","minimumTouchDrag","renderButtonGroupOutside","renderDotsOutside","responsive","desktop","breakpoint","max","min","items","partialVisibilityGutter","desktop2","tablet","mobile","showDots","sliderClass","slidesToSlide","swipeable","actionsTypes","addToList","value","type","newValue","removeFromList","selectors","state","comicsReducers","Button","color","onClick","CarouselItem","item","isLoading","dispatch","useDispatch","useSelector","preventDragHandler","e","preventDefault","to","onDragStart","SearchBar","placeholder","onChange","alignSelf","fontSize","icon","faSearch","Home","comicsResponse","setComicsResponse","comicsFiltered","setComicsFilter","setLoading","getComics","then","results","renderComicsNotFount","renderCarousel","map","index","backgroundColor","event","textTypedInLowerCase","toLowerCase","filteredComicsArray","filter","includes","searchComics","target","loadinRandomArray","Array","fill","Math","round","random","renderLoading","length","Characters","Card","Comics","props","params","match","creatorResponse","setCreatorResponse","isError","setError","getComicsById","pop","creators","available","getCreatorsByComicId","catch","getComicReleasedDate","unformatedDate","dates","date","Date","toLocaleDateString","renderComicInformation","display","justifyContent","fullName","pageCount","description","Form","name","email","fields","setFields","isEmailEmpty","setEmailEmpty","isNameEmpty","setNameEmpty","handleInputChange","isEmptyForm","sendEmail","handleFormSubmit","List","removeComicFromList","addComicToList","BurguerMenu","sidebarOpen","setSidebarOpen","renderBurguerButton","faTimes","faBars","Navbar","menuItems","paths","Routes","basename","exact","component","INITIAL_STATE","reducers","combineReducers","action","newComicObject","push","store","createStore","Root","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a79994c4.chunk.js","sourcesContent":["const Paths = {\n  home: '/',\n  characters: '/characters',\n  comics: '/comics/:id',\n  list: '/list'\n}\n\nexport default Paths\n","const images = {\n  header: require('../assets/miles-morales.png').default,\n  headerBackground: require('../assets/ny.jpg').default,\n  error: require('../assets/deadpool-sad.png').default,\n  errorBackground: require('../assets/rain.png').default,\n  list: require('../assets/deadpool-reading.png').default,\n  logo: require('../assets/marvel-logo.png').default\n}\n\nexport default images\n","const breakpoints = {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920\n}\n\nexport default breakpoints\n","import { useState, useEffect } from 'react'\nimport { breakpoints } from '../themes'\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window\n  return { width, height }\n}\n\nexport const useWindowDimensions = () => {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions())\n\n  useEffect(() => {\n    function handleResize () {\n      setWindowDimensions(getWindowDimensions())\n    }\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  return windowDimensions\n}\n\nexport const getBreakpoints = (width) => {\n  const isDesktop = width > breakpoints.md\n  const isTablet = width > breakpoints.sm && width <= breakpoints.md\n  const isMobile = width <= breakpoints.sm\n\n  return { isDesktop, isTablet, isMobile }\n}\n\nexport const getComicImage = (comic) =>\n  comic?.thumbnail?.path + '.' + comic?.thumbnail?.extension\n\nexport const getComicOnList = (comicsArray, comicId) => (\n  comicsArray\n    .find(comic => comic.comicDetails.id === comicId)\n)\n\nexport const getNumberOnList = (comicsArray, comicId) => {\n  const comicObject = getComicOnList(comicsArray, comicId)\n  const isComicOnList = !!comicObject\n\n  if (!isComicOnList) return 0\n\n  return comicObject.numberOfComics\n}\n","import axios from 'axios'\n\nconst apiKey = `apikey=${process.env.REACT_APP_API_KEY}`\nconst hash = `hash=${process.env.REACT_APP_HASH}`\nconst secret = `ts=1&${apiKey}&${hash}`\n\nconst baseURL = 'https://gateway.marvel.com/v1/public'\nconst emailURL = 'https://daniudo557.top'\n\nconst api = axios.create({ baseURL })\nconst emailApi = axios.create({ baseURL: emailURL })\n\nconst API = {}\n\nAPI.getComics = () => api.get(`/comics?limit=100&${secret}`)\nAPI.getComicsById = (comicId) => api.get(`/comics/${comicId}?${secret}`)\nAPI.getStoriesByComicId = (comicId) =>\n  api.get(`/comics/${comicId}/stories?${secret}`)\nAPI.getCreatorsByComicId = (comicId) =>\n  api.get(`/comics/${comicId}/creators?${secret}`)\nAPI.sendEmail = data => emailApi.post('/send', data)\n\nAPI.getCharacters = () => api.get(`/characters?${secret}`)\nAPI.getCharacters2 = () => api.get(`/comics/1308/characters?${secret}`)\n\nexport default API\n","import React from 'react'\n\nimport { useWindowDimensions, getBreakpoints } from '../../functions/utils'\nimport './styles.scss'\n\nconst Section = ({ title, customStyles, children, id }) => {\n  const { width } = useWindowDimensions()\n  const { isDesktop, isTablet, isMobile } = getBreakpoints(width)\n\n  const desktopStyles = { ...customStyles, padding: 32 }\n  const tabletStyles = { ...customStyles, padding: 16 }\n  const mobileStyles = { ...customStyles, padding: 8 }\n\n  const getStyles = () => {\n    if (isDesktop) return desktopStyles\n    else if (isTablet) return tabletStyles\n    else if (isMobile) return mobileStyles\n  }\n\n  return (\n    <section\n      id={id}\n      style={getStyles()}\n      className='container'\n    >\n      <h2 className='title'>{title}</h2>\n      {children}\n    </section>\n  )\n}\n\nexport default Section\n","import React from 'react'\nimport { images } from '../../themes'\n\nimport { getBreakpoints, useWindowDimensions } from '../../functions/utils'\n\nimport './styles.scss'\n\nconst Banner = ({\n  backgroundImage = images.headerBackground,\n  image = images.header,\n  shadowFilter,\n  text\n}) => {\n  const { width } = useWindowDimensions()\n  const { isDesktop, isTablet, isMobile } = getBreakpoints(width)\n  const desktopStyles = { paddingRight: 32, paddingLeft: 32 }\n  const tabletStyles = { paddingRight: 16, paddingLeft: 16 }\n  const mobileStyles = { paddingRight: 8, paddingLeft: 8 }\n\n  const getStyles = () => {\n    if (isDesktop) return desktopStyles\n    else if (isTablet) return tabletStyles\n    else if (isMobile) return mobileStyles\n  }\n\n  const getwelcomeSectionContainerClass = () => {\n    if (isDesktop) return 'welcomeSectionContainer'\n    else if (isTablet) return 'welcomeSectionContainer-tablet'\n    else if (isMobile) return 'welcomeSectionContainer-mobile'\n  }\n\n  const getWelcomeSectionTxtClass = () => {\n    if (isDesktop) return 'welcomeSectionTxt'\n    else if (isTablet) return 'welcomeSectionTxt-tablet'\n    else if (isMobile) return 'welcomeSectionTxt-mobile'\n  }\n  return (\n    <section style={getStyles()}>\n      <div className='backgroundImgContainer'>\n        <div\n          className='backgroundImg'\n          style={{ backgroundImage: `url(${backgroundImage})` }}\n        />\n        {shadowFilter && <div className='shadowFilter' />}\n      </div>\n      <div className='welcomeSection'>\n        <div className={getwelcomeSectionContainerClass()}>\n          <img\n            src={image}\n            alt='logo'\n            className={`animatedImgSlideRight \n            ${isDesktop\n              ? 'animatedImg'\n              : isTablet\n                ? 'animatedImg-tablet'\n                : 'animatedImg-mobile'}`}\n          />\n          <div\n            className={`welcomeSectionTxtAppear ${getWelcomeSectionTxtClass()}`}\n          >\n            {text}\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Banner\n","import Carousel from 'react-multi-carousel'\nimport 'react-multi-carousel/lib/styles.css'\n\nimport { breakpoints } from '../../themes'\n\nconst CustomCarousel = ({ children }) => {\n  return ((\n    <Carousel\n      additionalTransfrom={0}\n      arrows\n      autoPlaySpeed={3000}\n      centerMode={false}\n      className=''\n      containerClass='container-with-dots'\n      dotListClass=''\n      draggable\n      focusOnSelect={false}\n      infinite\n      itemClass=''\n      keyBoardControl\n      minimumTouchDrag={80}\n      renderButtonGroupOutside={false}\n      renderDotsOutside={false}\n      responsive={{\n        desktop: {\n          breakpoint: {\n            max: 3000,\n            min: breakpoints.xl\n          },\n          items: 5,\n          partialVisibilityGutter: 0\n        },\n        desktop2: {\n          breakpoint: {\n            max: breakpoints.xl,\n            min: breakpoints.lg\n          },\n          items: 3,\n          partialVisibilityGutter: 30\n        },\n        tablet: {\n          breakpoint: {\n            max: breakpoints.lg,\n            min: breakpoints.md\n          },\n          items: 2,\n          partialVisibilityGutter: 30\n        },\n        mobile: {\n          breakpoint: {\n            max: breakpoints.md,\n            min: 0\n          },\n          items: 1,\n          partialVisibilityGutter: 30\n        }\n      }}\n      showDots={false}\n      sliderClass=''\n      slidesToSlide={1}\n      swipeable\n    >\n      {children}\n    </Carousel>\n  ))\n}\n\nexport default CustomCarousel\n","const actionsTypes = {\n  ADD_COMIC_TO_LIST: 'ADD_COMIC_TO_LIST',\n  REMOVE_COMIC_FROM_LIST: 'REMOVE_COMIC_FROM_LIST'\n}\n\nexport { actionsTypes }\n","import { actionsTypes } from './actionsTypes'\n\nexport const addToList = (value) => ({\n  type: actionsTypes.ADD_COMIC_TO_LIST,\n  newValue: value\n})\n\nexport const removeFromList = (value) => ({\n  type: actionsTypes.REMOVE_COMIC_FROM_LIST,\n  newValue: value\n})\n","const selectors = {\n  getComics: state => state.comicsReducers.comics\n}\n\nexport { selectors }\n","import React from 'react'\nimport './styles.scss'\n\nconst Button = ({ text, color, onClick = () => {} }) => {\n  return (\n    <button onClick={onClick} className='buttonContainer'>\n      {text}\n    </button>\n  )\n}\n\nexport default Button\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { removeFromList, addToList } from '../../redux/actions/comics'\nimport { selectors } from '../../redux/selectors/comics'\n\nimport {\n  useWindowDimensions,\n  getBreakpoints,\n  getComicImage,\n  getNumberOnList\n} from '../../functions/utils'\n\nimport Button from '../button'\nimport './styles.scss'\n\nconst CarouselItem = ({ item, isLoading }) => {\n  const { width } = useWindowDimensions()\n  const { isTablet, isMobile } = getBreakpoints(width)\n\n  const dispatch = useDispatch()\n  const comics = useSelector(selectors.getComics)\n\n  const removeComicFromList = (comic) => dispatch(removeFromList(comic))\n  const addComicToList = (comic) => dispatch(addToList(comic))\n\n  const preventDragHandler = (e) => {\n    e.preventDefault()\n  }\n\n  const renderContent = () => (\n    <>\n      <Link\n        className='carouselImageContainer'\n        to={`comics/${item.id}`}\n      >\n        <h2 id='seeMore'>VER MAIS</h2>\n        <img\n          className='carouselImage'\n          onDragStart={preventDragHandler}\n          alt={item.title}\n          src={getComicImage(item)}\n        />\n        <h2 className='numberOfComicIndicator'>\n          {getNumberOnList(comics, item.id)}\n        </h2>\n      </Link>\n      <div className='itemFooter'>\n        <div className='comicTitle'>\n          {item.title}\n        </div>\n        <div className='itemFooterButtons'>\n          <Button\n            text='Remover da lista'\n            onClick={() => removeComicFromList(item)}\n          />\n          <Button\n            text='Adicionar à lista'\n            onClick={() => addComicToList(item)}\n          />\n        </div>\n      </div>\n    </>\n  )\n  return (\n    <div\n      className={`carouselItemContainer\n        ${isMobile\n          ? 'carouselItemContainer-mobile'\n          : 'carouselItemContainer-tablet'}`}\n    >\n      <div\n        id='arrow'\n        className={`carouselItem \n        ${isTablet && 'carouselItem-tablet'}\n        ${isLoading && 'loading'}`}\n      >\n        {!isLoading && renderContent()}\n      </div>\n    </div>\n  )\n}\n\nexport default CarouselItem\n","import React from 'react'\n\nimport './styles.scss'\n\nimport { getBreakpoints, useWindowDimensions } from '../../functions/utils'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\n\nconst SearchBar = ({ placeholder, onChange }) => {\n  const { width } = useWindowDimensions()\n  const { isTablet, isMobile } = getBreakpoints(width)\n\n  return (\n    <form className={`searchBar ${(isTablet || isMobile) && 'searchBar-mobile'}`}>\n      <FontAwesomeIcon\n        style={{ alignSelf: 'center', fontSize: 26 }}\n        color='#F0141E'\n        icon={faSearch}\n      />\n      <input type='text' style={{ width: '100%' }} onChange={onChange} placeholder={placeholder} />\n    </form>\n  )\n}\n\nexport default SearchBar\n","import React, { useState, useEffect } from 'react'\n\nimport { getBreakpoints, useWindowDimensions } from '../../functions/utils'\n\nimport API from '../../services/api'\nimport './styles.scss'\n\nimport Section from '../../components/section'\nimport Banner from '../../components/banner'\nimport CustomCarousel from '../../components/customCarousel'\nimport CarouselItem from '../../components/carouselItem'\nimport SearchBar from '../../components/searchBar'\n\nconst Home = () => {\n  const { width } = useWindowDimensions()\n  const { isTablet } = getBreakpoints(width)\n\n  const [comicsResponse, setComicsResponse] = useState([])\n  const [comicsFiltered, setComicsFilter] = useState([])\n  const [isLoading, setLoading] = useState(false)\n\n  useEffect(() => {\n    setLoading(true)\n    API.getComics().then(({ data }) => {\n      setComicsResponse(data.data.results)\n      setComicsFilter(data.data.results)\n      setLoading(false)\n    })\n  }, [])\n\n  const renderContent = () => (\n    comicsFiltered.length === 0\n      ? renderComicsNotFount()\n      : renderCarousel()\n  )\n  const renderComicsNotFount = () => (\n    <div className='comicsNotFoundContainer'>\n      <h2>Não foi encontrado nenhum quadrinho com esse título</h2>\n    </div>\n  )\n  const renderCarousel = () => (\n    <CustomCarousel isMobile={isTablet}>\n      {comicsFiltered.map((comic, index) => (\n        <CarouselItem\n          key={index}\n          item={comic}\n        />\n      ))}\n    </CustomCarousel>\n  )\n\n  const renderLoading = () => {\n    const loadinRandomArray =\n     Array(5).fill().map(() => Math.round(Math.random() * 5))\n    return (\n      <CustomCarousel isMobile={isTablet}>\n        {loadinRandomArray.map((item, index) => (\n          <CarouselItem\n            key={index}\n            isLoading\n          />\n        ))}\n      </CustomCarousel>\n    )\n  }\n\n  const searchComics = (text) => {\n    const textTypedInLowerCase = text.toLowerCase()\n    const filteredComicsArray = comicsResponse.filter((comic) => {\n      const titleInLowerCase = comic.title.toLowerCase()\n      return titleInLowerCase.includes(textTypedInLowerCase)\n    })\n    setComicsFilter(filteredComicsArray)\n  }\n\n  return (\n    <>\n      <Banner\n        text='Bem vindo(a) ao Marvel-App! Explore o mundo dos quadrinhos'\n      />\n      <Section\n        id='comics'\n        customStyles={{ backgroundColor: '#EEEEEE' }}\n        title='Procure o seu quadrinho preferido!'\n      >\n        <SearchBar\n          onChange={(event) => searchComics(event.target.value)}\n          placeholder='X-Men: Days of Future Past (Trade Paperback)'\n        />\n        {isLoading ? renderLoading() : renderContent()}\n      </Section>\n    </>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport Banner from '../../components/banner'\n\nconst Characters = () => {\n  return (\n    <div className=''>\n      <Banner />\n    </div>\n  )\n}\n\nexport default Characters\n","import React from 'react'\nimport './styles.scss'\n\nconst Card = ({ children, backgroundColor }) => (\n  <div className='cardContainer' style={{ backgroundColor }}>\n    {children}\n  </div>\n)\n\nexport default Card\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { removeFromList, addToList } from '../../redux/actions/comics'\nimport { selectors } from '../../redux/selectors/comics'\n\nimport API from '../../services/api'\nimport { getComicImage, getNumberOnList } from '../../functions/utils'\n\nimport Button from '../../components/button'\nimport Card from '../../components/card'\nimport Banner from '../../components/banner'\nimport Section from '../../components/section'\n\nimport { images } from '../../themes'\n\nconst Comics = (props) => {\n  const { params } = props.match\n\n  const [comicsResponse, setComicsResponse] = useState([])\n  const [creatorResponse, setCreatorResponse] = useState(null)\n  const [isLoading, setLoading] = useState(false)\n  const [isError, setError] = useState(false)\n\n  const comics = useSelector(selectors.getComics)\n\n  const dispatch = useDispatch()\n\n  const removeComicFromList = (comic) => dispatch(removeFromList(comic))\n  const addComicToList = (comic) => dispatch(addToList(comic))\n\n  useEffect(() => {\n    setLoading(true)\n    API.getComicsById(params.id).then(({ data }) => {\n      setComicsResponse(data.data.results.pop())\n\n      if (comicsResponse?.creators?.available > 0) {\n        API.getCreatorsByComicId(params.id).then(({ data }) => {\n          setCreatorResponse(data.data.results.pop())\n        }).catch(() => {\n          setError(true)\n          setLoading(false)\n        })\n      }\n      setLoading(false)\n      setError(false)\n    }).catch(() => {\n      setError(true)\n      setLoading(false)\n    })\n  }, [])\n\n  const getComicReleasedDate = () => {\n    const unformatedDate = comicsResponse?.dates?.filter(item => item.type === 'focDate')[0].date\n    const date = new Date(unformatedDate)\n    return date.toLocaleDateString()\n  }\n\n  const renderComicInformation = () => (\n    <div style={{ display: 'flex', justifyContent: 'center' }}>\n      <Card backgroundColor='white'>\n        <h3>Criador: {creatorResponse\n          ? creatorResponse?.fullName\n          : 'Invalid Creator'}\n        </h3>\n        <h3>Data de publicação: {getComicReleasedDate()}</h3>\n        <h3>Número de páginas: {comicsResponse?.pageCount}</h3>\n        <h3>Descrição: {comicsResponse?.description\n          ? comicsResponse?.description\n          : 'Invalid description'}\n        </h3>\n        <h3>Na sua lista: {getNumberOnList(comics, comicsResponse?.id)}</h3>\n        <Button\n          text='Remover da lista'\n          onClick={() => removeComicFromList(comicsResponse)}\n        />\n        <Button\n          text='Adicionar à lista'\n          onClick={() => addComicToList(comicsResponse)}\n        />\n      </Card>\n    </div>\n  )\n\n  const renderContent = () => (\n    <>\n      <Banner\n        shadowFilter\n        image={getComicImage(comicsResponse)}\n        backgroundImage={getComicImage(comicsResponse)}\n        text={comicsResponse?.title}\n      />\n      <Section\n        customStyles={{ backgroundColor: '#EEEEEE' }}\n        title={comicsResponse?.title}\n      >\n        {renderComicInformation()}\n      </Section>\n    </>\n  )\n\n  const renderError = () => (\n    <Banner\n      shadowFilter\n      image={images.error}\n      backgroundImage={images.errorBackground}\n      text='Não foi possível carregar os dados do quadrinho'\n    />\n  )\n\n  if (isLoading) {\n    return <h1>Loading</h1>\n  }\n  return isError ? renderError() : renderContent()\n}\n\nexport default Comics\n","import React, { useState } from 'react'\n\nimport API from '../../services/api'\n\nimport Button from '../../components/button'\nimport Card from '../../components/card'\nimport './styles.scss'\n\nconst Form = ({ comics }) => {\n  const [fields, setFields] = useState({\n    name: '',\n    email: ''\n  })\n  const [isEmailEmpty, setEmailEmpty] = useState(false)\n  const [isNameEmpty, setNameEmpty] = useState(false)\n\n  const parseComics = (comicsArray) => (\n    comicsArray.map((comic) => ({\n      title: comic.comicDetails.title,\n      numberOfComics: comic.numberOfComics\n    }))\n  )\n\n  const handleInputChange = (event) => {\n    fields[event.target.name] = event.target.value\n\n    setFields(fields)\n  }\n\n  const handleFormSubmit = () => {\n    if (isEmptyForm()) return\n\n    API.sendEmail({ ...fields, comics: parseComics(comics) })\n  }\n\n  const isEmptyForm = () => {\n    if (fields.name === '') setNameEmpty(true)\n    else setNameEmpty(false)\n\n    if (fields.email === '') setEmailEmpty(true)\n    else setEmailEmpty(false)\n\n    return (isNameEmpty || isEmailEmpty)\n  }\n\n  return (\n    <Card backgroundColor='#F2F2F2'>\n      <label>E-mail</label>\n      {isEmailEmpty && <label className='errorLabel'>* Preencha o campo \"E-mail\"</label>}\n      <input\n        className={`formInput ${isEmailEmpty && 'errorBorder'}`}\n        onChange={handleInputChange}\n        type='text'\n        id='email'\n        name='email'\n        placeholder='exemplo@email.com'\n      />\n\n      <label>Nome: </label>\n      {isNameEmpty && <label className='errorLabel'>* Preencha o campo \"Nome\"</label>}\n      <input\n        className={`formInput ${isNameEmpty && 'errorBorder'}`}\n        onChange={handleInputChange}\n        type='text'\n        id='name'\n        name='name'\n        placeholder='Daniel Macedo'\n      />\n      <Button\n        text='Enviar email'\n        onClick={() => handleFormSubmit()}\n      />\n    </Card>\n  )\n}\n\nexport default Form\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { removeFromList, addToList } from '../../redux/actions/comics'\nimport { selectors } from '../../redux/selectors/comics'\n\nimport Banner from '../../components/banner'\nimport Button from '../../components/button'\nimport Card from '../../components/card'\nimport Section from '../../components/section'\nimport Form from '../../components/form'\nimport { images } from '../../themes'\n\nconst List = () => {\n  const comics = useSelector(selectors.getComics)\n\n  const dispatch = useDispatch()\n\n  const removeComicFromList = (comic) => dispatch(removeFromList(comic))\n  const addComicToList = (comic) => dispatch(addToList(comic))\n\n  const renderContent = () =>\n    (\n      <div className=''>\n        <Banner\n          image={images.list}\n          text='Consulte sua lista de quadrinhos'\n        />\n        <Section\n          customStyles={{ backgroundColor: '#F5F5F5' }}\n          title='Consulte sua lista de quadrinhos'\n        >\n          {comics.map((comic, index) => (\n            <div key={index} style={{ padding: 32 }}>\n              <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <Card backgroundColor='white'>\n\n                  <h1>Título: {comic.comicDetails.title}</h1>\n                  <h1>Na sua lista: {comic.numberOfComics}</h1>\n                  <Button\n                    text='Remover da lista'\n                    onClick={() => removeComicFromList(comic.comicDetails)}\n                  />\n                  <Button\n                    text='Adicionar à lista'\n                    onClick={() => addComicToList(comic.comicDetails)}\n                  />\n                </Card>\n              </div>\n            </div>\n          ))}\n        </Section>\n        <Section\n          customStyles={{ backgroundColor: '#EEEEEE' }}\n          title='Envie a lista para para seu email'\n        >\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Form comics={comics} />\n          </div>\n        </Section>\n      </div>\n    )\n\n  const renderEmptyList = () => (\n    <Banner\n      image={images.error}\n      backgroundImage={images.errorBackground}\n      text='Você ainda não possui nenhum quadrinho em sua lista.\n         Adicione quadrinhos na página principal'\n    />\n  )\n\n  return comics.length > 0 ? renderContent() : renderEmptyList()\n}\n\nexport default List\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faBars } from '@fortawesome/free-solid-svg-icons'\n\nimport './styles.scss'\n\nconst BurguerMenu = ({ items }) => {\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n\n  const renderBurguerItems = () => (\n    items.map((item, index) => (\n      <Link\n        key={index}\n        to={item.path}\n        className='marvelDefaultText menuItem'\n        style={{ fontSize: 22, padding: '8px 0px 8px 0px' }}\n        onClick={() => setSidebarOpen(false)}\n      >\n        {item.text}\n      </Link>\n    ))\n  )\n\n  const renderOpenedBurguer = () => (\n    <div className='sideBarMenu'>\n      {renderBurguerButton()}\n      {renderBurguerItems()}\n    </div>\n  )\n\n  const renderBurguerButton = () => (\n    <div className={sidebarOpen\n      ? 'burgerButtonContainer-opened'\n      : 'burgerButtonContainer'}\n    >\n      <div\n        className='burgerButton'\n        onClick={() => setSidebarOpen(!sidebarOpen)}\n      >\n        {sidebarOpen\n          ? <FontAwesomeIcon\n              style={{ alignSelf: 'center', fontSize: 26 }}\n              color='#F0141E'\n              icon={faTimes}\n            />\n          : <FontAwesomeIcon\n              style={{ alignSelf: 'center', fontSize: 26 }}\n              color='#F0141E'\n              icon={faBars}\n            />}\n      </div>\n    </div>\n  )\n  return sidebarOpen ? renderOpenedBurguer() : renderBurguerButton()\n}\nexport default BurguerMenu\n","import React from 'react'\nimport { images } from '../../themes'\nimport { Link } from 'react-router-dom'\n\nimport paths from '../../routes/paths'\nimport { useWindowDimensions, getBreakpoints } from '../../functions/utils'\nimport BurguerMenu from './burguerMenu'\nimport './styles.scss'\n\nconst Navbar = () => {\n  const { width } = useWindowDimensions()\n  const { isMobile, isTablet } = getBreakpoints(width)\n\n  const menuItems = [\n    { text: 'Quadrinhos', path: paths.home },\n    { text: 'Personagens', path: paths.characters },\n    { text: 'Minha lista', path: paths.list }\n  ]\n\n  const renderMobileNavBar = () => (\n    <div className='navBar navBar-mobile'>\n      <div className='marvelLogo marvelLogo-mobile'>\n        <Link\n          className='marvelDefaultText'\n          style={{ paddingRight: 8, paddingLeft: 8 }}\n          to={paths.home}\n        >\n          M\n        </Link>\n      </div>\n      <BurguerMenu items={menuItems} />\n    </div>\n  )\n\n  const renderDesktopNavBar = () => (\n    <div className='navBar'>\n      <Link\n        style={{ height: '100%' }}\n        to={paths.home}\n      >\n        <img src={images.logo} className='marvelLogo' alt='logo' />\n      </Link>\n      <div className='menuLine'>\n        {menuItems.map((item, index) => (\n          <Link\n            key={index}\n            to={item.path}\n            className='marvelDefaultText menuItem'\n          >\n            {item.text}\n          </Link>\n        ))}\n\n      </div>\n    </div>\n  )\n\n  return isMobile || isTablet ? renderMobileNavBar() : renderDesktopNavBar()\n}\n\nexport default Navbar\n","import Paths from './paths'\nimport Routes from './routes'\n\nexport const paths = Paths\n\nexport default Routes\n","import React from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nimport paths from './paths'\nimport Home from '../pages/home'\nimport Characters from '../pages/characters'\nimport Comics from '../pages/comics'\nimport List from '../pages/list'\nimport Navbar from '../components/navbar'\n\nexport default function Routes () {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Navbar />\n      <Route path={paths.home} exact component={Home} />\n      <Route path={paths.comics} component={Comics} />\n      <Route path={paths.characters} component={Characters} />\n      <Route path={paths.list} component={List} />\n    </BrowserRouter>\n  )\n}\n","import { actionsTypes } from '../actions/actionsTypes'\nimport { getComicOnList } from '../../functions/utils'\nconst INITIAL_STATE = {\n  comics: []\n}\n\nconst reducers = (state = INITIAL_STATE, action) => {\n  const addComicToList = () => {\n    const comicsArray = state.comics\n    const isComicOnList = !!getComicOnList(comicsArray, action.newValue.id)\n\n    // if comic is not on list, it must start\n    // with numberOfComics equals to 1\n    if (!isComicOnList) {\n      const newComicObject = {\n        numberOfComics: 1,\n        comicDetails: action.newValue\n      }\n      comicsArray.push(newComicObject)\n\n      return [...comicsArray]\n    }\n\n    return comicsArray.map(comic =>\n      comic.comicDetails.id === action.newValue.id\n        ? { ...comic, numberOfComics: comic.numberOfComics + 1 }\n        : comic\n    )\n  }\n\n  const removeComicFromList = () => {\n    const comicsArray = state.comics\n    const comicObject = getComicOnList(comicsArray, action.newValue.id)\n    const isComicOnList = !!comicObject\n\n    // if comic is not on list, it can't be removed\n    if (!isComicOnList) { return [...comicsArray] }\n\n    // if numberOfComics is equals to 1, it object\n    // has to be be removed from list\n    if (comicObject.numberOfComics === 1) {\n      return comicsArray\n        .filter((comic) => comic.comicDetails.id !== action.newValue.id)\n    }\n\n    return comicsArray.map(comic =>\n      comic.comicDetails.id === action.newValue.id\n        ? { ...comic, numberOfComics: comic.numberOfComics - 1 }\n        : comic\n    )\n  }\n\n  switch (action.type) {\n    case actionsTypes.ADD_COMIC_TO_LIST:\n      return { ...state, comics: addComicToList() }\n    case actionsTypes.REMOVE_COMIC_FROM_LIST:\n      return { ...state, comics: removeComicFromList() }\n    default:\n      return state\n  }\n}\n\nexport { reducers }\n","import { combineReducers } from 'redux'\nimport { reducers as comicsReducers } from './comics'\n\nconst reducers = combineReducers({\n  comicsReducers\n})\n\nexport { reducers }\n","import { createStore } from 'redux'\nimport { reducers } from './reducers'\n\nconst store = createStore(reducers)\n\nexport { store }\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport Routes from './routes'\n\nimport { store } from './redux/store'\n\nconst Root = () => (\n  <Provider store={store}>\n    <Routes />\n  </Provider>\n)\n\nexport default Root\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Root from './root'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\nreportWebVitals()\n","export default __webpack_public_path__ + \"static/media/miles-morales.c51f6de4.png\";","export default __webpack_public_path__ + \"static/media/ny.d8dfa83b.jpg\";","export default __webpack_public_path__ + \"static/media/deadpool-sad.ee4d77fb.png\";","export default __webpack_public_path__ + \"static/media/rain.087b7fd6.png\";","export default __webpack_public_path__ + \"static/media/deadpool-reading.5afa8a20.png\";","export default __webpack_public_path__ + \"static/media/marvel-logo.568d8c62.png\";"],"sourceRoot":""}