{"version":3,"sources":["routes/paths.js","themes/images.js","themes/breakpoints.js","functions/utils.js","services/api.js","components/section/index.js","components/banner/index.js","components/customCarousel/index.js","redux/actions/actionsTypes.js","redux/actions/comics.js","redux/selectors/comics.js","components/button/index.js","components/carouselItem/index.js","components/searchBar/index.js","pages/home/index.js","pages/characters/index.js","components/card/index.js","pages/charactersDetails/index.js","pages/comics/index.js","components/form/index.js","pages/list/index.js","components/navbar/burguerMenu.js","components/navbar/index.js","routes/index.js","routes/routes.js","redux/reducers/comics.js","redux/reducers/index.js","redux/store.js","root.js","reportWebVitals.js","index.js","assets/miles-morales.png","assets/ny.jpg","assets/deadpool-sad.png","assets/rain.png","assets/deadpool-reading.png","assets/characters.png","assets/battle.jpg","assets/marvel-logo.png"],"names":["Paths","home","characters","charactersDetails","comics","list","images","header","require","default","headerBackground","error","errorBackground","battle","logo","breakpoints","xs","sm","md","lg","xl","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","getBreakpoints","isDesktop","isTablet","isMobile","getComicImage","comic","thumbnail","path","extension","getComicOnList","comicsArray","comicId","find","comicDetails","id","getNumberOnList","comicObject","numberOfComics","apiKey","process","hash","secret","api","axios","create","baseURL","emailApi","API","get","data","post","characterId","Section","title","customStyles","children","desktopStyles","padding","tabletStyles","mobileStyles","style","className","Banner","backgroundImage","image","shadowFilter","text","paddingRight","paddingLeft","src","alt","CustomCarousel","additionalTransfrom","arrows","autoPlaySpeed","centerMode","containerClass","dotListClass","draggable","focusOnSelect","infinite","itemClass","keyBoardControl","minimumTouchDrag","renderButtonGroupOutside","renderDotsOutside","responsive","desktop","breakpoint","max","min","items","partialVisibilityGutter","desktop2","tablet","mobile","showDots","sliderClass","slidesToSlide","swipeable","actionsTypes","addToList","value","type","newValue","removeFromList","selectors","state","comicsReducers","Button","onClick","CarouselItem","item","isLoading","isComics","dispatch","useDispatch","useSelector","preventDragHandler","e","preventDefault","getTitle","name","renderButtons","to","onDragStart","SearchBar","placeholder","onChange","alignSelf","fontSize","color","icon","faSearch","Home","comicsResponse","setComicsResponse","comicsFiltered","setComicsFilter","setLoading","getComics","then","results","renderComicsNotFount","renderCarousel","map","index","backgroundColor","event","textTypedInLowerCase","toLowerCase","filteredComicsArray","filter","includes","searchComics","target","loadinRandomArray","Array","fill","Math","round","random","renderLoading","length","Characters","charactersResponse","setCharactersResponse","charactersFiltered","setCharactersFilter","getCharacters","renderCharactersNotFount","character","filteredCharactersArray","searchCharacters","Card","props","params","match","isError","setError","getCharactersById","pop","catch","display","alignItems","justifyContent","description","Comics","creatorResponse","setCreatorResponse","getComicsById","creators","available","getCreatorsByComicId","getComicReleasedDate","unformatedDate","dates","date","Date","toLocaleDateString","renderComicInformation","fullName","pageCount","Form","email","fields","setFields","isEmailEmpty","setEmailEmpty","isNameEmpty","setNameEmpty","isSuccess","setSuccess","handleInputChange","handleFormSubmit","isEmptyForm","sendEmail","renderResponseLabel","customClass","List","paddingTop","removeComicFromList","addComicToList","BurguerMenu","sidebarOpen","setSidebarOpen","renderBurguerButton","faTimes","faBars","Navbar","menuItems","paths","Routes","basename","exact","component","CharactersDetails","INITIAL_STATE","reducers","combineReducers","action","newComicObject","push","store","createStore","Root","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54bb2096.chunk.js","sourcesContent":["const Paths = {\n  home: '/',\n  characters: '/characters',\n  charactersDetails: '/characters/:id',\n  comics: '/comics/:id',\n  list: '/list'\n}\n\nexport default Paths\n","const images = {\n  header: require('../assets/miles-morales.png').default,\n  headerBackground: require('../assets/ny.jpg').default,\n  error: require('../assets/deadpool-sad.png').default,\n  errorBackground: require('../assets/rain.png').default,\n  list: require('../assets/deadpool-reading.png').default,\n  characters: require('../assets/characters.png').default,\n  battle: require('../assets/battle.jpg').default,\n  logo: require('../assets/marvel-logo.png').default\n}\n\nexport default images\n","const breakpoints = {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920\n}\n\nexport default breakpoints\n","import { useState, useEffect } from 'react'\nimport { breakpoints } from '../themes'\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window\n  return { width, height }\n}\n\nexport const useWindowDimensions = () => {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions())\n\n  useEffect(() => {\n    function handleResize () {\n      setWindowDimensions(getWindowDimensions())\n    }\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  return windowDimensions\n}\n\nexport const getBreakpoints = (width) => {\n  const isDesktop = width > breakpoints.md\n  const isTablet = width > breakpoints.sm && width <= breakpoints.md\n  const isMobile = width <= breakpoints.sm\n\n  return { isDesktop, isTablet, isMobile }\n}\n\nexport const getComicImage = (comic) =>\n  comic?.thumbnail?.path + '.' + comic?.thumbnail?.extension\n\nexport const getComicOnList = (comicsArray, comicId) => (\n  comicsArray\n    .find(comic => comic.comicDetails.id === comicId)\n)\n\nexport const getNumberOnList = (comicsArray, comicId) => {\n  const comicObject = getComicOnList(comicsArray, comicId)\n  const isComicOnList = !!comicObject\n\n  if (!isComicOnList) return 0\n\n  return comicObject.numberOfComics\n}\n","import axios from 'axios'\n\nconst apiKey = `apikey=${process.env.REACT_APP_API_KEY}`\nconst hash = `hash=${process.env.REACT_APP_HASH}`\nconst secret = `ts=1&${apiKey}&${hash}`\n\nconst baseURL = 'https://gateway.marvel.com/v1/public'\nconst emailURL = 'https://daniudo557.top'\n\nconst api = axios.create({ baseURL })\nconst emailApi = axios.create({ baseURL: emailURL })\n\nconst API = {}\n\nAPI.getComics = () => api.get(`/comics?limit=100&${secret}`)\nAPI.getComicsById = (comicId) => api.get(`/comics/${comicId}?${secret}`)\nAPI.getCreatorsByComicId = (comicId) =>\n  api.get(`/comics/${comicId}/creators?${secret}`)\nAPI.sendEmail = data => emailApi.post('/send', data)\n\nAPI.getCharacters = () => api.get(`/characters?limit=100&${secret}`)\nAPI.getCharactersById = (characterId) =>\n  api.get(`/characters/${characterId}?${secret}`)\n\nexport default API\n","import React from 'react'\n\nimport { useWindowDimensions, getBreakpoints } from '../../functions/utils'\nimport './styles.scss'\n\nconst Section = ({ title, customStyles, children, id }) => {\n  const { width } = useWindowDimensions()\n  const { isDesktop, isTablet, isMobile } = getBreakpoints(width)\n\n  const desktopStyles = { ...customStyles, padding: 32 }\n  const tabletStyles = { ...customStyles, padding: 16 }\n  const mobileStyles = { ...customStyles, padding: 8 }\n\n  const getStyles = () => {\n    if (isDesktop) return desktopStyles\n    else if (isTablet) return tabletStyles\n    else if (isMobile) return mobileStyles\n  }\n\n  return (\n    <section\n      id={id}\n      style={getStyles()}\n      className='container'\n    >\n      <h2 className='title'>{title}</h2>\n      {children}\n    </section>\n  )\n}\n\nexport default Section\n","import React from 'react'\nimport { images } from '../../themes'\n\nimport { getBreakpoints, useWindowDimensions } from '../../functions/utils'\n\nimport './styles.scss'\n\nconst Banner = ({\n  backgroundImage = images.headerBackground,\n  image = images.header,\n  shadowFilter,\n  text\n}) => {\n  const { width } = useWindowDimensions()\n  const { isDesktop, isTablet, isMobile } = getBreakpoints(width)\n  const desktopStyles = { paddingRight: 32, paddingLeft: 32 }\n  const tabletStyles = { paddingRight: 16, paddingLeft: 16 }\n  const mobileStyles = { paddingRight: 8, paddingLeft: 8 }\n\n  const getStyles = () => {\n    if (isDesktop) return desktopStyles\n    else if (isTablet) return tabletStyles\n    else if (isMobile) return mobileStyles\n  }\n\n  const getwelcomeSectionContainerClass = () => {\n    if (isDesktop) return 'welcomeSectionContainer'\n    else if (isTablet) return 'welcomeSectionContainer-tablet'\n    else if (isMobile) return 'welcomeSectionContainer-mobile'\n  }\n\n  const getWelcomeSectionTxtClass = () => {\n    if (isDesktop) return 'welcomeSectionTxt'\n    else if (isTablet) return 'welcomeSectionTxt-tablet'\n    else if (isMobile) return 'welcomeSectionTxt-mobile'\n  }\n  return (\n    <section style={getStyles()}>\n      <div className='backgroundImgContainer'>\n        <div\n          className='backgroundImg'\n          style={{ backgroundImage: `url(${backgroundImage})` }}\n        />\n        {shadowFilter && <div className='shadowFilter' />}\n      </div>\n      <div className='welcomeSection'>\n        <div className={getwelcomeSectionContainerClass()}>\n          <img\n            src={image}\n            alt='logo'\n            className={`animatedImgSlideRight \n            ${isDesktop\n              ? 'animatedImg'\n              : isTablet\n                ? 'animatedImg-tablet'\n                : 'animatedImg-mobile'}`}\n          />\n          <div\n            className={`welcomeSectionTxtAppear ${getWelcomeSectionTxtClass()}`}\n          >\n            {text}\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Banner\n","import Carousel from 'react-multi-carousel'\nimport 'react-multi-carousel/lib/styles.css'\n\nimport { breakpoints } from '../../themes'\n\nconst CustomCarousel = ({ children }) => {\n  return ((\n    <Carousel\n      additionalTransfrom={0}\n      arrows\n      autoPlaySpeed={3000}\n      centerMode={false}\n      className=''\n      containerClass='container-with-dots'\n      dotListClass=''\n      draggable\n      focusOnSelect={false}\n      infinite\n      itemClass=''\n      keyBoardControl\n      minimumTouchDrag={80}\n      renderButtonGroupOutside={false}\n      renderDotsOutside={false}\n      responsive={{\n        desktop: {\n          breakpoint: {\n            max: 3000,\n            min: breakpoints.xl\n          },\n          items: 5,\n          partialVisibilityGutter: 0\n        },\n        desktop2: {\n          breakpoint: {\n            max: breakpoints.xl,\n            min: breakpoints.lg\n          },\n          items: 3,\n          partialVisibilityGutter: 30\n        },\n        tablet: {\n          breakpoint: {\n            max: breakpoints.lg,\n            min: breakpoints.md\n          },\n          items: 2,\n          partialVisibilityGutter: 30\n        },\n        mobile: {\n          breakpoint: {\n            max: breakpoints.md,\n            min: 0\n          },\n          items: 1,\n          partialVisibilityGutter: 30\n        }\n      }}\n      showDots={false}\n      sliderClass=''\n      slidesToSlide={1}\n      swipeable\n    >\n      {children}\n    </Carousel>\n  ))\n}\n\nexport default CustomCarousel\n","const actionsTypes = {\n  ADD_COMIC_TO_LIST: 'ADD_COMIC_TO_LIST',\n  REMOVE_COMIC_FROM_LIST: 'REMOVE_COMIC_FROM_LIST'\n}\n\nexport { actionsTypes }\n","import { actionsTypes } from './actionsTypes'\n\nexport const addToList = (value) => ({\n  type: actionsTypes.ADD_COMIC_TO_LIST,\n  newValue: value\n})\n\nexport const removeFromList = (value) => ({\n  type: actionsTypes.REMOVE_COMIC_FROM_LIST,\n  newValue: value\n})\n","const selectors = {\n  getComics: state => state.comicsReducers.comics\n}\n\nexport { selectors }\n","import React from 'react'\nimport './styles.scss'\n\nconst Button = ({ text, onClick = () => {} }) => {\n  return (\n    <button onClick={onClick} className='buttonContainer'>\n      {text}\n    </button>\n  )\n}\n\nexport default Button\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { removeFromList, addToList } from '../../redux/actions/comics'\nimport { selectors } from '../../redux/selectors/comics'\n\nimport {\n  useWindowDimensions,\n  getBreakpoints,\n  getComicImage,\n  getNumberOnList\n} from '../../functions/utils'\n\nimport Button from '../button'\nimport './styles.scss'\n\nconst CarouselItem = ({ item, isLoading, isComics }) => {\n  const { width } = useWindowDimensions()\n  const { isTablet, isMobile } = getBreakpoints(width)\n\n  const dispatch = useDispatch()\n  const comics = useSelector(selectors.getComics)\n\n  const removeComicFromList = (comic) => dispatch(removeFromList(comic))\n  const addComicToList = (comic) => dispatch(addToList(comic))\n\n  const preventDragHandler = (e) => {\n    e.preventDefault()\n  }\n\n  const getTitle = () => isComics ? item.title : item.name\n  const renderButtons = () => (\n    <div className='itemFooterButtons'>\n      <Button\n        text='Remover da lista'\n        onClick={() => removeComicFromList(item)}\n      />\n      <Button\n        text='Adicionar à lista'\n        onClick={() => addComicToList(item)}\n      />\n    </div>\n  )\n  const getNumberOfComics = () => (\n    <h2 className='numberOfComicIndicator'>\n      {getNumberOnList(comics, item.id)}\n    </h2>\n  )\n\n  const renderContent = () => (\n    <>\n      <Link\n        className={`carouselImageContainer ${!isComics &&\n          'carouselImageContainer-characters'}`}\n        to={isComics ? `comics/${item.id}` : `characters/${item.id}`}\n      >\n        {isComics && getNumberOfComics()}\n        <h2 id='seeMore'>VER MAIS</h2>\n        <img\n          className='carouselImage'\n          onDragStart={preventDragHandler}\n          alt={getTitle()}\n          src={getComicImage(item)}\n        />\n      </Link>\n      <div className='itemFooter'>\n        <div className='comicTitle'>\n          {getTitle()}\n        </div>\n        {isComics && renderButtons()}\n      </div>\n    </>\n  )\n  return (\n    <div\n      className={`carouselItemContainer\n        ${isMobile && 'carouselItemContainer-mobile'}`}\n    >\n      <div\n        id='arrow'\n        className={`carouselItem \n        ${isTablet && 'carouselItem-tablet'}\n        ${isLoading && 'loading'}`}\n      >\n        {!isLoading && renderContent()}\n      </div>\n    </div>\n  )\n}\n\nexport default CarouselItem\n","import React from 'react'\n\nimport './styles.scss'\n\nimport { getBreakpoints, useWindowDimensions } from '../../functions/utils'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\n\nconst SearchBar = ({ placeholder, onChange }) => {\n  const { width } = useWindowDimensions()\n  const { isTablet, isMobile } = getBreakpoints(width)\n\n  return (\n    <form className={`searchBar ${(isTablet || isMobile) && 'searchBar-mobile'}`}>\n      <FontAwesomeIcon\n        style={{ alignSelf: 'center', fontSize: 26 }}\n        color='#F0141E'\n        icon={faSearch}\n      />\n      <input type='text' style={{ width: '100%' }} onChange={onChange} placeholder={placeholder} />\n    </form>\n  )\n}\n\nexport default SearchBar\n","import React, { useState, useEffect } from 'react'\n\nimport { getBreakpoints, useWindowDimensions } from '../../functions/utils'\n\nimport API from '../../services/api'\nimport './styles.scss'\n\nimport Section from '../../components/section'\nimport Banner from '../../components/banner'\nimport CustomCarousel from '../../components/customCarousel'\nimport CarouselItem from '../../components/carouselItem'\nimport SearchBar from '../../components/searchBar'\n\nconst Home = () => {\n  const { width } = useWindowDimensions()\n  const { isTablet } = getBreakpoints(width)\n\n  const [comicsResponse, setComicsResponse] = useState([])\n  const [comicsFiltered, setComicsFilter] = useState([])\n  const [isLoading, setLoading] = useState(false)\n\n  useEffect(() => {\n    setLoading(true)\n    API.getComics().then(({ data }) => {\n      setComicsResponse(data.data.results)\n      setComicsFilter(data.data.results)\n      setLoading(false)\n    })\n  }, [])\n\n  const renderContent = () => (\n    comicsFiltered.length === 0\n      ? renderComicsNotFount()\n      : renderCarousel()\n  )\n  const renderComicsNotFount = () => (\n    <div className='comicsNotFoundContainer'>\n      <h2>Não foi encontrado nenhum quadrinho com esse título</h2>\n    </div>\n  )\n  const renderCarousel = () => (\n    <CustomCarousel isMobile={isTablet}>\n      {comicsFiltered.map((comic, index) => (\n        <CarouselItem\n          key={index}\n          item={comic}\n          isComics\n        />\n      ))}\n    </CustomCarousel>\n  )\n\n  const renderLoading = () => {\n    const loadinRandomArray =\n     Array(5).fill().map(() => Math.round(Math.random() * 5))\n    return (\n      <CustomCarousel isMobile={isTablet}>\n        {loadinRandomArray.map((item, index) => (\n          <CarouselItem\n            key={index}\n            isLoading\n          />\n        ))}\n      </CustomCarousel>\n    )\n  }\n\n  const searchComics = (text) => {\n    const textTypedInLowerCase = text.toLowerCase()\n    const filteredComicsArray = comicsResponse.filter((comic) => {\n      const titleInLowerCase = comic.title.toLowerCase()\n      return titleInLowerCase.includes(textTypedInLowerCase)\n    })\n    setComicsFilter(filteredComicsArray)\n  }\n\n  return (\n    <>\n      <Banner\n        text='Bem vindo(a) ao Marvel-App! Explore o mundo dos quadrinhos'\n      />\n      <Section\n        id='comics'\n        customStyles={{ backgroundColor: '#EEEEEE' }}\n        title='Procure o seu quadrinho preferido!'\n      >\n        <SearchBar\n          onChange={(event) => searchComics(event.target.value)}\n          placeholder='X-Men: Days of Future Past (Trade Paperback)'\n        />\n        {isLoading ? renderLoading() : renderContent()}\n      </Section>\n    </>\n  )\n}\n\nexport default Home\n","import React, { useState, useEffect } from 'react'\n\nimport { getBreakpoints, useWindowDimensions } from '../../functions/utils'\n\nimport API from '../../services/api'\n\nimport Section from '../../components/section'\nimport Banner from '../../components/banner'\nimport CustomCarousel from '../../components/customCarousel'\nimport CarouselItem from '../../components/carouselItem'\nimport SearchBar from '../../components/searchBar'\nimport { images } from '../../themes'\n\nconst Characters = () => {\n  const { width } = useWindowDimensions()\n  const { isTablet } = getBreakpoints(width)\n\n  const [charactersResponse, setCharactersResponse] = useState([])\n  const [charactersFiltered, setCharactersFilter] = useState([])\n  const [isLoading, setLoading] = useState(false)\n\n  useEffect(() => {\n    setLoading(true)\n    API.getCharacters().then(({ data }) => {\n      setCharactersResponse(data.data.results)\n      setCharactersFilter(data.data.results)\n      setLoading(false)\n    })\n  }, [])\n\n  const renderContent = () => (\n    charactersFiltered.length === 0\n      ? renderCharactersNotFount()\n      : renderCarousel()\n  )\n\n  const renderCharactersNotFount = () => (\n    <div className='comicsNotFoundContainer'>\n      <h2>Não foi personagem com esse nome</h2>\n    </div>\n  )\n  const renderCarousel = () => (\n    <CustomCarousel isMobile={isTablet}>\n      {charactersFiltered.map((character, index) => (\n        <CarouselItem\n          key={index}\n          item={character}\n        />\n      ))}\n    </CustomCarousel>\n  )\n\n  const renderLoading = () => {\n    const loadinRandomArray =\n     Array(5).fill().map(() => Math.round(Math.random() * 5))\n    return (\n      <CustomCarousel isMobile={isTablet}>\n        {loadinRandomArray.map((item, index) => (\n          <CarouselItem\n            key={index}\n            isLoading\n          />\n        ))}\n      </CustomCarousel>\n    )\n  }\n\n  const searchCharacters = (text) => {\n    const textTypedInLowerCase = text.toLowerCase()\n    const filteredCharactersArray = charactersResponse.filter((character) => {\n      const titleInLowerCase = character.name.toLowerCase()\n      return titleInLowerCase.includes(textTypedInLowerCase)\n    })\n    setCharactersFilter(filteredCharactersArray)\n  }\n\n  return (\n    <>\n      <Banner\n        text='Conheça nossos personagens!'\n        image={images.characters}\n        backgroundImage={images.battle}\n      />\n      <Section\n        customStyles={{ backgroundColor: '#EEEEEE' }}\n        title='Procure o seu personagem preferido!'\n      >\n        <SearchBar\n          onChange={(event) => searchCharacters(event.target.value)}\n          placeholder='Ant-man'\n        />\n        {isLoading ? renderLoading() : renderContent()}\n      </Section>\n    </>\n  )\n}\n\nexport default Characters\n","import React from 'react'\nimport './styles.scss'\n\nconst Card = ({ children, backgroundColor }) => (\n  <div className='cardContainer' style={{ backgroundColor }}>\n    {children}\n  </div>\n)\n\nexport default Card\n","import React, { useState, useEffect } from 'react'\n\nimport ReactLoading from 'react-loading'\n\nimport API from '../../services/api'\nimport { getComicImage } from '../../functions/utils'\n\nimport Card from '../../components/card'\nimport Banner from '../../components/banner'\nimport Section from '../../components/section'\n\nimport { images } from '../../themes'\n\nconst Characters = (props) => {\n  const { params } = props.match\n\n  const [charactersResponse, setCharactersResponse] = useState([])\n  const [isLoading, setLoading] = useState(false)\n  const [isError, setError] = useState(false)\n\n  useEffect(() => {\n    setLoading(true)\n    API.getCharactersById(params.id).then(({ data }) => {\n      setCharactersResponse(data.data.results.pop())\n\n      setLoading(false)\n      setError(false)\n    }).catch(() => {\n      setError(true)\n      setLoading(false)\n    })\n  }, [])\n\n  const renderContent = () => (\n    <>\n      <Banner\n        shadowFilter\n        image={getComicImage(charactersResponse)}\n        backgroundImage={getComicImage(charactersResponse)}\n        text={charactersResponse?.name}\n      />\n      <Section\n        customStyles={{ backgroundColor: '#EEEEEE' }}\n        title={charactersResponse?.name}\n      >\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <Card backgroundColor='white'>\n            <h3>Descrição: {charactersResponse?.description\n              ? charactersResponse?.description\n              : 'Invalid description'}\n            </h3>\n          </Card>\n        </div>\n      </Section>\n    </>\n  )\n\n  const renderError = () => (\n    <Banner\n      shadowFilter\n      image={images.error}\n      backgroundImage={images.errorBackground}\n      text='Não foi possível carregar os dados do personagem'\n    />\n  )\n\n  const renderLoading = () => (\n    <div style={{\n      display: 'flex',\n      height: '100vh',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }}\n    >\n      <ReactLoading\n        type='spin'\n        color='#F0141E'\n        height='6%'\n        width='6%'\n      />\n    </div>\n  )\n\n  if (isLoading) {\n    return renderLoading()\n  }\n\n  return isError ? renderError() : renderContent()\n}\n\nexport default Characters\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { removeFromList, addToList } from '../../redux/actions/comics'\nimport { selectors } from '../../redux/selectors/comics'\nimport ReactLoading from 'react-loading'\n\nimport API from '../../services/api'\nimport { getComicImage, getNumberOnList } from '../../functions/utils'\n\nimport Button from '../../components/button'\nimport Card from '../../components/card'\nimport Banner from '../../components/banner'\nimport Section from '../../components/section'\n\nimport { images } from '../../themes'\n\nconst Comics = (props) => {\n  const { params } = props.match\n\n  const [comicsResponse, setComicsResponse] = useState([])\n  const [creatorResponse, setCreatorResponse] = useState(null)\n  const [isLoading, setLoading] = useState(false)\n  const [isError, setError] = useState(false)\n\n  const comics = useSelector(selectors.getComics)\n\n  const dispatch = useDispatch()\n\n  const removeComicFromList = (comic) => dispatch(removeFromList(comic))\n  const addComicToList = (comic) => dispatch(addToList(comic))\n\n  useEffect(() => {\n    setLoading(true)\n    API.getComicsById(params.id).then(({ data }) => {\n      setComicsResponse(data.data.results.pop())\n\n      if (comicsResponse?.creators?.available > 0) {\n        API.getCreatorsByComicId(params.id).then(({ data }) => {\n          setCreatorResponse(data.data.results.pop())\n        }).catch(() => {\n          setError(true)\n          setLoading(false)\n        })\n      }\n      setLoading(false)\n      setError(false)\n    }).catch(() => {\n      setError(true)\n      setLoading(false)\n    })\n  }, [])\n\n  const getComicReleasedDate = () => {\n    const unformatedDate = comicsResponse?.dates?.filter(item => item.type === 'focDate')[0].date\n    const date = new Date(unformatedDate)\n    return date.toLocaleDateString()\n  }\n\n  const renderComicInformation = () => (\n    <div style={{ display: 'flex', justifyContent: 'center' }}>\n      <Card backgroundColor='white'>\n        <h3>Criador: {creatorResponse\n          ? creatorResponse?.fullName\n          : 'Invalid Creator'}\n        </h3>\n        <h3>Data de publicação: {getComicReleasedDate()}</h3>\n        <h3>Número de páginas: {comicsResponse?.pageCount}</h3>\n        <h3>Descrição: {comicsResponse?.description\n          ? comicsResponse?.description\n          : 'Invalid description'}\n        </h3>\n        <h3>Na sua lista: {getNumberOnList(comics, comicsResponse?.id)}</h3>\n        <Button\n          text='Remover da lista'\n          onClick={() => removeComicFromList(comicsResponse)}\n        />\n        <Button\n          text='Adicionar à lista'\n          onClick={() => addComicToList(comicsResponse)}\n        />\n      </Card>\n    </div>\n  )\n\n  const renderContent = () => (\n    <>\n      <Banner\n        shadowFilter\n        image={getComicImage(comicsResponse)}\n        backgroundImage={getComicImage(comicsResponse)}\n        text={comicsResponse?.title}\n      />\n      <Section\n        customStyles={{ backgroundColor: '#EEEEEE' }}\n        title={comicsResponse?.title}\n      >\n        {renderComicInformation()}\n      </Section>\n    </>\n  )\n\n  const renderError = () => (\n    <Banner\n      shadowFilter\n      image={images.error}\n      backgroundImage={images.errorBackground}\n      text='Não foi possível carregar os dados do quadrinho'\n    />\n  )\n\n  const renderLoading = () => (\n    <div style={{\n      display: 'flex',\n      height: '100vh',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }}\n    >\n      <ReactLoading\n        type='spin'\n        color='#F0141E'\n        height='6%'\n        width='6%'\n      />\n    </div>\n  )\n\n  if (isLoading) {\n    return renderLoading()\n  }\n\n  return isError ? renderError() : renderContent()\n}\n\nexport default Comics\n","import React, { useState } from 'react'\n\nimport API from '../../services/api'\n\nimport ReactLoading from 'react-loading'\n\nimport Button from '../../components/button'\nimport Card from '../../components/card'\nimport './styles.scss'\n\nconst Form = ({ comics }) => {\n  const [fields, setFields] = useState({\n    name: '',\n    email: ''\n  })\n  const [isEmailEmpty, setEmailEmpty] = useState(false)\n  const [isNameEmpty, setNameEmpty] = useState(false)\n  const [isLoading, setLoading] = useState(false)\n  const [isError, setError] = useState(false)\n  const [isSuccess, setSuccess] = useState(false)\n\n  const parseComics = (comicsArray) => (\n    comicsArray.map((comic) => ({\n      title: comic.comicDetails.title,\n      numberOfComics: comic.numberOfComics\n    }))\n  )\n\n  const handleInputChange = (event) => {\n    fields[event.target.name] = event.target.value\n\n    setFields(fields)\n  }\n\n  const sendEmail = () => {\n    setSuccess(false)\n    setLoading(true)\n\n    API.sendEmail({ ...fields, comics: parseComics(comics) })\n      .then(() => {\n        setLoading(false)\n        setSuccess(true)\n      }\n      )\n      .catch(() => {\n        setError(true)\n        setLoading(false)\n      })\n  }\n\n  const handleFormSubmit = () => {\n    if (isEmptyForm()) return\n\n    sendEmail()\n  }\n\n  const isEmptyForm = () => {\n    if (fields.name === '') setNameEmpty(true)\n    else setNameEmpty(false)\n\n    if (fields.email === '') setEmailEmpty(true)\n    else setEmailEmpty(false)\n\n    return (isNameEmpty || isEmailEmpty)\n  }\n\n  const renderResponseLabel = () => {\n    let customClass = ''\n    let text = ''\n    if (isError) {\n      customClass = 'errorLabel'\n      text = '* Não foi possível enviar o email. Tente novamente mais tarde'\n    } else if (isSuccess) {\n      customClass = 'successLabel'\n      text = '* Email enviado com sucesso! Confira sua caixa de entrada'\n    }\n\n    return (\n      <h5 className={`${customClass}`}>\n        {text}\n      </h5>\n    )\n  }\n\n  const renderContent = () => (\n    <>\n      {(isError || isSuccess) && renderResponseLabel()}\n      <label>E-mail</label>\n      {isEmailEmpty && <label className='errorLabel'>* Preencha o campo \"E-mail\"</label>}\n      <input\n        className={`formInput ${isEmailEmpty && 'errorBorder'}`}\n        onChange={handleInputChange}\n        type='text'\n        id='email'\n        name='email'\n        placeholder='exemplo@email.com'\n      />\n\n      <label>Nome: </label>\n      {isNameEmpty && <label className='errorLabel'>* Preencha o campo \"Nome\"</label>}\n      <input\n        className={`formInput ${isNameEmpty && 'errorBorder'}`}\n        onChange={handleInputChange}\n        type='text'\n        id='name'\n        name='name'\n        placeholder='Daniel Macedo'\n      />\n      <Button\n        text='Enviar email'\n        onClick={() => handleFormSubmit()}\n      />\n    </>\n  )\n\n  const renderLoading = () => (\n    <div style={{ display: 'flex', justifyContent: 'center' }}>\n      <ReactLoading\n        type='spin'\n        color='#F0141E'\n        height='20%'\n        width='20%'\n      />\n    </div>\n  )\n\n  return (\n    <Card backgroundColor='#F2F2F2'>\n      {isLoading ? renderLoading() : renderContent()}\n    </Card>\n  )\n}\n\nexport default Form\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { removeFromList, addToList } from '../../redux/actions/comics'\nimport { selectors } from '../../redux/selectors/comics'\n\nimport Banner from '../../components/banner'\nimport Button from '../../components/button'\nimport Card from '../../components/card'\nimport Section from '../../components/section'\nimport Form from '../../components/form'\nimport { images } from '../../themes'\n\nconst List = () => {\n  const comics = useSelector(selectors.getComics)\n\n  const dispatch = useDispatch()\n\n  const removeComicFromList = (comic) => dispatch(removeFromList(comic))\n  const addComicToList = (comic) => dispatch(addToList(comic))\n\n  const renderContent = () =>\n    (\n      <div className=''>\n        <Banner\n          image={images.list}\n          text='Gerencie sua lista de quadrinhos!'\n        />\n        <Section\n          customStyles={{ backgroundColor: '#F5F5F5' }}\n          title='Sua lista'\n        >\n          {comics.map((comic, index) => (\n            <div key={index} style={{ paddingTop: 16 }}>\n              <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <Card backgroundColor='white'>\n                  <h3>Título: {comic.comicDetails.title}</h3>\n                  <h3>Na sua lista: {comic.numberOfComics}</h3>\n                  <Button\n                    text='Remover da lista'\n                    onClick={() => removeComicFromList(comic.comicDetails)}\n                  />\n                  <Button\n                    text='Adicionar à lista'\n                    onClick={() => addComicToList(comic.comicDetails)}\n                  />\n                </Card>\n              </div>\n            </div>\n          ))}\n        </Section>\n        <Section\n          customStyles={{ backgroundColor: '#EEEEEE' }}\n          title='Facilite! Envie sua lista para o email desejado'\n        >\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Form comics={comics} />\n          </div>\n        </Section>\n      </div>\n    )\n\n  const renderEmptyList = () => (\n    <Banner\n      image={images.error}\n      backgroundImage={images.errorBackground}\n      text='Você ainda não possui nenhum quadrinho em sua lista.\n         Adicione quadrinhos na página principal!'\n    />\n  )\n\n  return comics.length > 0 ? renderContent() : renderEmptyList()\n}\n\nexport default List\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faBars } from '@fortawesome/free-solid-svg-icons'\n\nimport './styles.scss'\n\nconst BurguerMenu = ({ items }) => {\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n\n  const renderBurguerItems = () => (\n    items.map((item, index) => (\n      <Link\n        key={index}\n        to={item.path}\n        className='marvelDefaultText menuItem'\n        style={{ fontSize: 22, padding: '8px 0px 8px 0px' }}\n        onClick={() => setSidebarOpen(false)}\n      >\n        {item.text}\n      </Link>\n    ))\n  )\n\n  const renderOpenedBurguer = () => (\n    <div className='sideBarMenu'>\n      {renderBurguerButton()}\n      {renderBurguerItems()}\n    </div>\n  )\n\n  const renderBurguerButton = () => (\n    <div className={sidebarOpen\n      ? 'burgerButtonContainer-opened'\n      : 'burgerButtonContainer'}\n    >\n      <div\n        className='burgerButton'\n        onClick={() => setSidebarOpen(!sidebarOpen)}\n      >\n        {sidebarOpen\n          ? <FontAwesomeIcon\n              style={{ alignSelf: 'center', fontSize: 26 }}\n              color='#F0141E'\n              icon={faTimes}\n            />\n          : <FontAwesomeIcon\n              style={{ alignSelf: 'center', fontSize: 26 }}\n              color='#F0141E'\n              icon={faBars}\n            />}\n      </div>\n    </div>\n  )\n  return sidebarOpen ? renderOpenedBurguer() : renderBurguerButton()\n}\nexport default BurguerMenu\n","import React from 'react'\nimport { images } from '../../themes'\nimport { Link } from 'react-router-dom'\n\nimport paths from '../../routes/paths'\nimport { useWindowDimensions, getBreakpoints } from '../../functions/utils'\nimport BurguerMenu from './burguerMenu'\nimport './styles.scss'\n\nconst Navbar = () => {\n  const { width } = useWindowDimensions()\n  const { isMobile, isTablet } = getBreakpoints(width)\n\n  const menuItems = [\n    { text: 'Quadrinhos', path: paths.home },\n    { text: 'Personagens', path: paths.characters },\n    { text: 'Minha lista', path: paths.list }\n  ]\n\n  const renderMobileNavBar = () => (\n    <div className='navBar navBar-mobile'>\n      <div className='marvelLogo marvelLogo-mobile'>\n        <Link\n          className='marvelDefaultText'\n          style={{ paddingRight: 8, paddingLeft: 8 }}\n          to={paths.home}\n        >\n          M\n        </Link>\n      </div>\n      <BurguerMenu items={menuItems} />\n    </div>\n  )\n\n  const renderDesktopNavBar = () => (\n    <div className='navBar'>\n      <Link\n        style={{ height: '100%' }}\n        to={paths.home}\n      >\n        <img src={images.logo} className='marvelLogo' alt='logo' />\n      </Link>\n      <div className='menuLine'>\n        {menuItems.map((item, index) => (\n          <Link\n            key={index}\n            to={item.path}\n            className='marvelDefaultText menuItem'\n          >\n            {item.text}\n          </Link>\n        ))}\n\n      </div>\n    </div>\n  )\n\n  return isMobile || isTablet ? renderMobileNavBar() : renderDesktopNavBar()\n}\n\nexport default Navbar\n","import Paths from './paths'\nimport Routes from './routes'\n\nexport const paths = Paths\n\nexport default Routes\n","import React from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nimport paths from './paths'\nimport Home from '../pages/home'\nimport Characters from '../pages/characters'\nimport CharactersDetails from '../pages/charactersDetails'\nimport Comics from '../pages/comics'\nimport List from '../pages/list'\nimport Navbar from '../components/navbar'\n\nexport default function Routes () {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Navbar />\n      <Route path={paths.home} exact component={Home} />\n      <Route path={paths.comics} component={Comics} />\n      <Route path={paths.characters} exact component={Characters} />\n      <Route path={paths.charactersDetails} component={CharactersDetails} />\n      <Route path={paths.list} component={List} />\n    </BrowserRouter>\n  )\n}\n","import { actionsTypes } from '../actions/actionsTypes'\nimport { getComicOnList } from '../../functions/utils'\nconst INITIAL_STATE = {\n  comics: []\n}\n\nconst reducers = (state = INITIAL_STATE, action) => {\n  const addComicToList = () => {\n    const comicsArray = state.comics\n    const isComicOnList = !!getComicOnList(comicsArray, action.newValue.id)\n\n    // if comic is not on list, it must start\n    // with numberOfComics equals to 1\n    if (!isComicOnList) {\n      const newComicObject = {\n        numberOfComics: 1,\n        comicDetails: action.newValue\n      }\n      comicsArray.push(newComicObject)\n\n      return [...comicsArray]\n    }\n\n    return comicsArray.map(comic =>\n      comic.comicDetails.id === action.newValue.id\n        ? { ...comic, numberOfComics: comic.numberOfComics + 1 }\n        : comic\n    )\n  }\n\n  const removeComicFromList = () => {\n    const comicsArray = state.comics\n    const comicObject = getComicOnList(comicsArray, action.newValue.id)\n    const isComicOnList = !!comicObject\n\n    // if comic is not on list, it can't be removed\n    if (!isComicOnList) { return [...comicsArray] }\n\n    // if numberOfComics is equals to 1, it object\n    // has to be be removed from list\n    if (comicObject.numberOfComics === 1) {\n      return comicsArray\n        .filter((comic) => comic.comicDetails.id !== action.newValue.id)\n    }\n\n    return comicsArray.map(comic =>\n      comic.comicDetails.id === action.newValue.id\n        ? { ...comic, numberOfComics: comic.numberOfComics - 1 }\n        : comic\n    )\n  }\n\n  switch (action.type) {\n    case actionsTypes.ADD_COMIC_TO_LIST:\n      return { ...state, comics: addComicToList() }\n    case actionsTypes.REMOVE_COMIC_FROM_LIST:\n      return { ...state, comics: removeComicFromList() }\n    default:\n      return state\n  }\n}\n\nexport { reducers }\n","import { combineReducers } from 'redux'\nimport { reducers as comicsReducers } from './comics'\n\nconst reducers = combineReducers({\n  comicsReducers\n})\n\nexport { reducers }\n","import { createStore } from 'redux'\nimport { reducers } from './reducers'\n\nconst store = createStore(reducers)\n\nexport { store }\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport Routes from './routes'\n\nimport { store } from './redux/store'\n\nconst Root = () => (\n  <Provider store={store}>\n    <Routes />\n  </Provider>\n)\n\nexport default Root\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Root from './root'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\nreportWebVitals()\n","export default __webpack_public_path__ + \"static/media/miles-morales.c51f6de4.png\";","export default __webpack_public_path__ + \"static/media/ny.d8dfa83b.jpg\";","export default __webpack_public_path__ + \"static/media/deadpool-sad.ee4d77fb.png\";","export default __webpack_public_path__ + \"static/media/rain.087b7fd6.png\";","export default __webpack_public_path__ + \"static/media/deadpool-reading.5afa8a20.png\";","export default __webpack_public_path__ + \"static/media/characters.572bab79.png\";","export default __webpack_public_path__ + \"static/media/battle.cc44a9ce.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-logo.568d8c62.png\";"],"sourceRoot":""}