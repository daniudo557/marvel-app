{"version":3,"sources":["assets/miles-morales.png","assets/ny.jpg","assets/marvel-logo.png","routes/paths.js","themes/images.js","themes/breakpoints.js","functions/utils.js","services/api.js","components/section/index.js","components/customCarousel/index.js","redux/actions/actionsTypes.js","redux/selectors/comics.js","components/button/index.js","components/carouselItem/index.js","redux/actions/comics.js","pages/home/index.js","pages/comics/index.js","components/navbar/burguerMenu.js","components/navbar/index.js","routes/index.js","routes/routes.js","redux/reducers/counter.js","redux/reducers/comics.js","redux/reducers/index.js","redux/store.js","root.js","reportWebVitals.js","index.js"],"names":["Paths","home","homeComicsHash","comics","images","header","require","default","headerBackground","logo","breakpoints","xs","sm","md","lg","xl","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","getBreakpoints","isDesktop","isTablet","isMobile","apiKey","process","hash","secret","api","axios","create","baseURL","API","get","Section","title","customStyles","children","id","desktopStyles","paddingRight","paddingLeft","tabletStyles","mobileStyles","style","className","CustomCarousel","additionalTransfrom","arrows","autoPlaySpeed","centerMode","containerClass","dotListClass","draggable","focusOnSelect","infinite","itemClass","keyBoardControl","minimumTouchDrag","renderButtonGroupOutside","renderDotsOutside","responsive","desktop","breakpoint","max","min","items","partialVisibilityGutter","desktop2","tablet","mobile","showDots","sliderClass","slidesToSlide","swipeable","actionsTypes","selectors","state","comicsReducers","Button","text","onClick","color","CarouselItem","item","dispatch","useDispatch","removeComicFromList","comic","type","newValue","addComicToList","console","log","to","onDragStart","e","preventDefault","alt","src","thumbnail","path","extension","Home","comicsResponse","setComicsResponse","isLoading","setLoading","useSelector","getComics","then","data","results","backgroundImage","backgroundColor","map","index","padding","comicDetails","numberOfComics","Comics","props","params","match","BurguerMenu","sidebarOpen","setSidebarOpen","renderBurguerButton","paths","href","fontSize","Navbar","menuItems","Routes","basename","exact","component","INITIAL_STATE","counter","reducers","combineReducers","counterReducers","action","getComicOnList","find","comicsArray","newComicObject","push","comicObject","filter","store","createStore","Root","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56e3c2bd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/miles-morales.c51f6de4.png\";","export default __webpack_public_path__ + \"static/media/ny.d8dfa83b.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-logo.568d8c62.png\";","const Paths = {\n  home: '/',\n  homeComicsHash: '#comics',\n  comics: '/comics/:id'\n}\n\nexport default Paths\n","const images = {\n  header: require('../assets/miles-morales.png').default,\n  headerBackground: require('../assets/ny.jpg').default,\n  logo: require('../assets/marvel-logo.png').default\n}\n\nexport default images\n","const breakpoints = {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920\n}\n\nexport default breakpoints\n","import { useState, useEffect } from 'react'\nimport { breakpoints } from '../themes'\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window\n  return { width, height }\n}\n\nexport const useWindowDimensions = () => {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions())\n\n  useEffect(() => {\n    function handleResize () {\n      setWindowDimensions(getWindowDimensions())\n    }\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  return windowDimensions\n}\n\nexport const getBreakpoints = (width) => {\n  const isDesktop = width > breakpoints.md\n  const isTablet = width > breakpoints.sm && width <= breakpoints.md\n  const isMobile = width <= breakpoints.sm\n\n  return { isDesktop, isTablet, isMobile }\n}\n","import axios from 'axios'\n\nconst apiKey = `apikey=${process.env.REACT_APP_API_KEY}`\nconst hash = `hash=${process.env.REACT_APP_HASH}`\nconst secret = `ts=1&${apiKey}&${hash}`\n\nconst baseURL = 'https://gateway.marvel.com/v1/public'\n\nconst api = axios.create({ baseURL })\n\nconst API = {}\n\nAPI.getComics = () => api.get(`/comics?${secret}`)\nAPI.getCharacters = () => api.get(`/characters?${secret}`)\nAPI.getCharacters2 = () => api.get(`/comics/1308/characters?${secret}`)\n\nexport default API\n","import React from 'react'\n\nimport { useWindowDimensions, getBreakpoints } from '../../functions/utils'\nimport './styles.scss'\n\nconst Section = ({ title, customStyles, children, id }) => {\n  const { width } = useWindowDimensions()\n  const { isDesktop, isTablet, isMobile } = getBreakpoints(width)\n\n  const desktopStyles = { ...customStyles, paddingRight: 32, paddingLeft: 32 }\n  const tabletStyles = { ...customStyles, paddingRight: 16, paddingLeft: 16 }\n  const mobileStyles = { ...customStyles, paddingRight: 8, paddingLeft: 8 }\n\n  const getStyles = () => {\n    if (isDesktop) return desktopStyles\n    else if (isTablet) return tabletStyles\n    else if (isMobile) return mobileStyles\n  }\n\n  return (\n    <section\n      id={id}\n      style={getStyles()}\n      className='container'\n    >\n      <h2 className='title'>{title}</h2>\n      {children}\n    </section>\n  )\n}\n\nexport default Section\n","import Carousel from 'react-multi-carousel'\nimport 'react-multi-carousel/lib/styles.css'\n\nimport { breakpoints } from '../../themes'\n\nconst CustomCarousel = ({ children }) => {\n  return ((\n    <Carousel\n      additionalTransfrom={0}\n      arrows\n      autoPlaySpeed={3000}\n      centerMode={false}\n      className=''\n      containerClass='container-with-dots'\n      dotListClass=''\n      draggable\n      focusOnSelect={false}\n      infinite\n      itemClass=''\n      keyBoardControl\n      minimumTouchDrag={80}\n      renderButtonGroupOutside={false}\n      renderDotsOutside={false}\n      responsive={{\n        desktop: {\n          breakpoint: {\n            max: 3000,\n            min: breakpoints.xl\n          },\n          items: 5,\n          partialVisibilityGutter: 0\n        },\n        desktop2: {\n          breakpoint: {\n            max: breakpoints.xl,\n            min: breakpoints.lg\n          },\n          items: 3,\n          partialVisibilityGutter: 30\n        },\n        tablet: {\n          breakpoint: {\n            max: breakpoints.lg,\n            min: breakpoints.md\n          },\n          items: 2,\n          partialVisibilityGutter: 30\n        },\n        mobile: {\n          breakpoint: {\n            max: breakpoints.md,\n            min: 0\n          },\n          items: 1,\n          partialVisibilityGutter: 30\n        }\n      }}\n      showDots={false}\n      sliderClass=''\n      slidesToSlide={1}\n      swipeable\n    >\n      {children}\n    </Carousel>\n  ))\n}\n\nexport default CustomCarousel\n","const actionsTypes = {\n  COUNTER_DECREMENT: 'COUNTER_DECREMENT',\n  COUNTER_INCREMENT: 'COUNTER_INCREMENT',\n  ADD_COMIC_TO_LIST: 'ADD_COMIC_TO_LIST',\n  REMOVE_COMIC_FROM_LIST: 'REMOVE_COMIC_FROM_LIST'\n}\n\nexport { actionsTypes }\n","const selectors = {\n  getComics: state => state.comicsReducers.comics\n}\n\nexport { selectors }\n","import React from 'react'\nimport './styles.scss'\n\nconst Button = ({ text, color, onClick }) => {\n  return (\n    <button onClick={onClick} className='buttonContainer'>\n      {text}\n    </button>\n  )\n}\n\nexport default Button\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { removeFromList, addToList } from '../../redux/actions/comics'\nimport { selectors } from '../../redux/selectors/comics'\n\nimport paths from '../../routes/paths'\nimport { useWindowDimensions, getBreakpoints } from '../../functions/utils'\nimport Button from '../button'\nimport './styles.scss'\n\nconst CarouselItem = ({ item }) => {\n  const { width } = useWindowDimensions()\n  const { isTablet, isMobile } = getBreakpoints(width)\n\n  // const comics = useSelector(selectors.getComics)\n  const dispatch = useDispatch()\n\n  const removeComicFromList = (comic) => dispatch(removeFromList(comic))\n  const addComicToList = (comic) => dispatch(addToList(comic))\n\n  const preventDragHandler = (e) => {\n    e.preventDefault()\n  }\n\n  return (\n    <div\n      className={`carouselItemContainer \n        ${isMobile\n          ? 'carouselItemContainer-mobile'\n          : 'carouselItemContainer-tablet'}`}\n    >\n      <div\n        id='arrow'\n        className={`carouselItem ${isTablet && 'carouselItem-tablet'}`}\n        onClick={() => console.log(item.id)}\n      >\n        <Link\n          className='carouselImageContainer'\n          to={`comics/${item.id}`}\n        >\n          <h2 id='seeMore'>VER MAIS</h2>\n          <img\n            className='carouselImage'\n            onDragStart={preventDragHandler}\n            alt={item.title}\n            src={item.thumbnail.path + '.' + item.thumbnail.extension}\n          />\n        </Link>\n        <div className='itemFooter'>\n          <div className='comicTitle'>\n            {item.title}\n          </div>\n          <div className='itemFooterButtons'>\n            <Button\n              text='Remover da lista'\n              onClick={() => removeComicFromList(item)}\n            />\n            <Button\n              text='Adicionar a lista'\n              onClick={() => addComicToList(item)}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CarouselItem\n","import { actionsTypes } from './actionsTypes'\n\nexport const addToList = (value) => ({\n  type: actionsTypes.ADD_COMIC_TO_LIST,\n  newValue: value\n})\n\nexport const removeFromList = (value) => ({\n  type: actionsTypes.REMOVE_COMIC_FROM_LIST,\n  newValue: value\n})\n","import React, { useState, useEffect } from 'react'\n\nimport { images } from '../../themes'\nimport { getBreakpoints, useWindowDimensions } from '../../functions/utils'\n\nimport API from '../../services/api'\nimport './styles.scss'\n\nimport Section from '../../components/section'\nimport CustomCarousel from '../../components/customCarousel'\nimport CarouselItem from '../../components/carouselItem'\n\n// TODO: Remove this import\nimport { useSelector } from 'react-redux'\nimport { selectors } from '../../redux/selectors/comics'\n//\n\nconst Home = () => {\n  const { width } = useWindowDimensions()\n  const { isDesktop, isTablet, isMobile } = getBreakpoints(width)\n\n  const [comicsResponse, setComicsResponse] = useState([])\n  const [isLoading, setLoading] = useState(false)\n  // const [characters, setCharacters] = useState([])\n\n  // TODO: Remove this variable\n  const comics = useSelector(selectors.getComics)\n\n  useEffect(() => {\n    setLoading(true)\n    API.getComics().then(({ data }) => {\n      setComicsResponse(data.data.results)\n      setLoading(false)\n    })\n  }, [])\n\n  // useEffect(() => {\n  //   API.getCharacters().then(({ data }) => {\n  //     setCharacters(data.data.results)\n  //   })\n  // }, [])\n\n  // useEffect(() => {\n  //   API.getCharacters2().then(({ data }) => {\n  //     console.log(data)\n  //   })\n  // }, [])\n\n  console.log(comicsResponse)\n  console.log('REDUX', comics)\n  // console.log(characters)\n\n  const renderCarousel = () => (\n    <CustomCarousel isMobile={isTablet}>\n      {comicsResponse.map((comic, index) => (\n        <CarouselItem\n          key={index}\n          item={comic}\n        />\n      ))}\n    </CustomCarousel>\n  )\n\n  const renderLoading = () => (\n    <div style={{ width: 300, height: 500 }}>loading</div>\n  )\n\n  const getwelcomeSectionContainerClass = () => {\n    if (isDesktop) return 'welcomeSectionContainer'\n    else if (isTablet) return 'welcomeSectionContainer-tablet'\n    else if (isMobile) return 'welcomeSectionContainer-mobile'\n  }\n\n  const getWelcomeSectionTxtClass = () => {\n    if (isDesktop) return 'welcomeSectionTxt'\n    else if (isTablet) return 'welcomeSectionTxt-tablet'\n    else if (isMobile) return 'welcomeSectionTxt-mobile'\n  }\n\n  return (\n    <>\n      <div className='backgroundImgContainer'>\n        <div\n          className='backgroundImg'\n          style={{ backgroundImage: `url(${images.headerBackground})` }}\n        />\n      </div>\n      <section id='#' className='welcomeSection'>\n        <div className={getwelcomeSectionContainerClass()}>\n          <img\n            src={images.header}\n            alt='logo'\n            className={`animatedImgSlideRight \n            ${isDesktop ? 'animatedImg' : 'animatedImg-tablet'}`}\n          />\n          <div\n            className={`welcomeSectionTxtAppear ${getWelcomeSectionTxtClass()}`}\n          >\n            Lorem Ipsum is simply dummy text of\n            the printing and typesetting industry.\n          </div>\n        </div>\n      </section>\n      <Section\n        id='comics'\n        customStyles={{ backgroundColor: '#F5F5F5' }}\n        title='Procure o seu quadrinho preferido!'\n      >\n        {isLoading ? renderLoading() : renderCarousel()}\n      </Section>\n      <section style={{ height: 500 }}>\n        {comics.map((comic, index) => (\n          <div key={index} style={{ padding: 32 }}>\n            <h1>Comic title: {comic.comicDetails.title}</h1>\n            <h1>Number of comics: {comic.numberOfComics}</h1>\n          </div>\n        ))}\n      </section>\n    </>\n  )\n}\n\nexport default Home\n","import React from 'react'\n\nconst Comics = (props) => {\n  const { params } = props.match\n  console.log(params)\n  return (\n    <div className=''>\n      Comics page\n    </div>\n  )\n}\n\nexport default Comics\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport paths from '../../routes/paths'\nimport './styles.scss'\n\nconst BurguerMenu = ({ items }) => {\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n\n  const renderBurguerItems = () => (\n    items.map((item, index) => (\n      item.path === paths.homeComicsHash\n        ? <a\n            key={index}\n            href={item.path}\n            className='marvelDefaultText menuItem'\n            style={{ fontSize: 22, padding: '8px 0px 8px 0px' }}\n            onClick={() => setSidebarOpen(false)}\n          >\n          {item.text}\n        </a>\n        : <Link\n            key={index}\n            to={item.path}\n            className='marvelDefaultText menuItem'\n            style={{ fontSize: 22, padding: '8px 0px 8px 0px' }}\n            onClick={() => setSidebarOpen(false)}\n          >\n          {item.text}\n          </Link>\n    ))\n  )\n\n  const renderOpenedBurguer = () => (\n    <div className='sideBarMenu'>\n      {renderBurguerButton()}\n      {renderBurguerItems()}\n    </div>\n  )\n\n  const renderBurguerButton = () => (\n    <div className='burgerButtonContainer'>\n      <div\n        className='burgerButton'\n        onClick={() => setSidebarOpen(!sidebarOpen)}\n      >\n        {sidebarOpen ? 'X' : '|||'}\n      </div>\n    </div>\n  )\n  return sidebarOpen ? renderOpenedBurguer() : renderBurguerButton()\n}\nexport default BurguerMenu\n","import React from 'react'\nimport { images } from '../../themes'\nimport { Link } from 'react-router-dom'\n\nimport paths from '../../routes/paths'\nimport { useWindowDimensions, getBreakpoints } from '../../functions/utils'\nimport BurguerMenu from './burguerMenu'\nimport './styles.scss'\n\nconst Navbar = () => {\n  const { width } = useWindowDimensions()\n  const { isMobile } = getBreakpoints(width)\n\n  const menuItems = [\n    { text: 'Quadrinhos', path: paths.homeComicsHash },\n    { text: 'Personagens', path: paths.comics },\n    { text: 'Minha lista', path: paths.home }\n  ]\n\n  const renderMobileNavBar = () => (\n    <div className='navBar navBar-mobile'>\n      <div className='marvelLogo marvelLogo-mobile'>\n        <Link\n          className='marvelDefaultText'\n          style={{ paddingRight: 8, paddingLeft: 8 }}\n          to={paths.home}\n        >\n          M\n        </Link>\n      </div>\n      <BurguerMenu items={menuItems} />\n    </div>\n  )\n\n  const renderDesktopNavBar = () => (\n    <div className='navBar'>\n      <Link\n        style={{ height: '100%' }}\n        to={paths.home}\n      >\n        <img src={images.logo} className='marvelLogo' alt='logo' />\n      </Link>\n      <div className='menuLine'>\n        {menuItems.map((item, index) => (\n          item.path === paths.homeComicsHash\n            ? <a\n                href={item.path}\n                className='marvelDefaultText menuItem'\n                key={index}\n              >\n              {item.text}\n            </a>\n            : <Link\n                to={item.path}\n                className='marvelDefaultText menuItem'\n                key={index}\n              >\n              {item.text}\n            </Link>\n        ))}\n\n      </div>\n    </div>\n  )\n\n  return isMobile ? renderMobileNavBar() : renderDesktopNavBar()\n}\n\nexport default Navbar\n","import Paths from './paths'\nimport Routes from './routes'\n\nexport const paths = Paths\n\nexport default Routes\n","import React from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nimport paths from './paths'\nimport Home from '../pages/home'\nimport Comics from '../pages/comics'\nimport Navbar from '../components/navbar'\n\nexport default function Routes () {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Navbar />\n      <Route path={paths.home} exact component={Home} />\n      <Route path={paths.comics} component={Comics} />\n    </BrowserRouter>\n  )\n}\n","import { actionsTypes } from '../actions/actionsTypes'\n\nconst INITIAL_STATE = {\n  counter: 0\n}\n\nconst reducers = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionsTypes.COUNTER_DECREMENT:\n      return { ...state, counter: state.counter - 1 }\n    case actionsTypes.COUNTER_INCREMENT:\n      return { ...state, counter: state.counter + 1 }\n    default:\n      return state\n  }\n}\n\nexport { reducers }\n","import { actionsTypes } from '../actions/actionsTypes'\n\nconst INITIAL_STATE = {\n  comics: []\n}\n\nconst reducers = (state = INITIAL_STATE, action) => {\n  const getComicOnList = () => state.comics\n    .find(comics => comics.comicDetails.id === action.newValue.id)\n\n  const addComicToList = () => {\n    const comicsArray = state.comics\n    const isComicOnList = !!getComicOnList()\n\n    // if comic is not on list, it must start\n    // with numberOfComics equals to 1\n    if (!isComicOnList) {\n      const newComicObject = {\n        numberOfComics: 1,\n        comicDetails: action.newValue\n      }\n      comicsArray.push(newComicObject)\n\n      return [...comicsArray]\n    }\n\n    return comicsArray.map(comic =>\n      comic.comicDetails.id === action.newValue.id\n        ? { ...comic, numberOfComics: comic.numberOfComics + 1 }\n        : comic\n    )\n  }\n\n  const removeComicFromList = () => {\n    const comicsArray = state.comics\n    const comicObject = getComicOnList()\n    const isComicOnList = !!comicObject\n\n    // if comic is not on list, it can't be removed\n    if (!isComicOnList) { return [...comicsArray] }\n\n    // if numberOfComics is equals to 1, it object\n    // has to be be removed from list\n    if (comicObject.numberOfComics === 1) {\n      return comicsArray\n        .filter((comic) => comic.comicDetails.id !== action.newValue.id)\n    }\n\n    return comicsArray.map(comic =>\n      comic.comicDetails.id === action.newValue.id\n        ? { ...comic, numberOfComics: comic.numberOfComics - 1 }\n        : comic\n    )\n  }\n\n  switch (action.type) {\n    case actionsTypes.ADD_COMIC_TO_LIST:\n      return { ...state, comics: addComicToList() }\n    case actionsTypes.REMOVE_COMIC_FROM_LIST:\n      return { ...state, comics: removeComicFromList() }\n    default:\n      return state\n  }\n}\n\nexport { reducers }\n","import { combineReducers } from 'redux'\nimport { reducers as counterReducers } from './counter'\nimport { reducers as comicsReducers } from './comics'\n\nconst reducers = combineReducers({\n  counterReducers,\n  comicsReducers\n})\n\nexport { reducers }\n","import { createStore } from 'redux'\nimport { reducers } from './reducers'\n\nconst store = createStore(reducers)\n\nexport { store }\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport Routes from './routes'\n\nimport { store } from './redux/store'\n\nconst Root = () => (\n  <Provider store={store}>\n    <Routes />\n  </Provider>\n)\n\nexport default Root\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Root from './root'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\nreportWebVitals()\n"],"sourceRoot":""}